{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Axios from 'axios';\n\nconst dictionary = () => {\n  const {\n    0: searchWord,\n    1: setSearchWord\n  } = useState(''); //   const [searchResult, setSearchResult] = useState(\"\");\n\n  const router = useRouter();\n\n  const handleChange = async e => {\n    setSearchWord(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const searchForm = {\n      id: router.query.movieId,\n      // title: ,\n      word: searchWord\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(searchForm);\n    console.log(body);\n    const res = await Axios.post(`/movies/${router.query.movieId}/dict`, body, config);\n    console.log(res);\n    console.log('Reached the end!!!');\n  };\n\n  const {\n    movieId\n  } = router.query;\n  return __jsx(\"div\", null, movieId, __jsx(\"form\", {\n    onSubmit: e => handleSubmit(e)\n  }, __jsx(\"label\", null, \"Search\"), __jsx(\"input\", {\n    type: \"text\",\n    value: searchWord,\n    onChange: e => handleChange(e)\n  })), __jsx(\"p\", null, \"Hello dictionary!!!\"));\n};\n\ndictionary.getInitialProps = async ctx => {\n  console.log(ctx);\n  const res = await Axios(`http://www.omdbapi.com/?i='tt0085574'/&type=movie&apikey=${process.env.OmdbKey}`);\n  console.log(res);\n  return {\n    data: res\n  };\n};\n\nexport default dictionary;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/movies/[movieId]/dict.js"],"names":["React","Fragment","useState","useRouter","Axios","dictionary","searchWord","setSearchWord","router","handleChange","e","target","value","handleSubmit","preventDefault","searchForm","id","query","movieId","word","config","headers","body","JSON","stringify","console","log","res","post","getInitialProps","ctx","process","env","OmdbKey","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACxB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BL,QAAQ,CAAC,EAAD,CAA5C,CADwB,CAExB;;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAxB;;AACA,QAAMM,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC/BH,IAAAA,aAAa,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAMH,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,UAAU,GAAG;AAClBC,MAAAA,EAAE,EAAER,MAAM,CAACS,KAAP,CAAaC,OADC;AAElB;AACAC,MAAAA,IAAI,EAAEb;AAHY,KAAnB;AAKA,UAAMc,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AADK,KAAf;AAKA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeT,UAAf,CAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMK,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAY,WAAUpB,MAAM,CAACS,KAAP,CAAaC,OAAQ,OAA3C,EAAmDI,IAAnD,EAAyDF,MAAzD,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,GAjBD;;AAkBA,QAAM;AAAER,IAAAA;AAAF,MAAcV,MAAM,CAACS,KAA3B;AACA,SACC,mBACEC,OADF,EAEC;AAAM,IAAA,QAAQ,EAAER,CAAC,IAAIG,YAAY,CAACH,CAAD;AAAjC,KACC,8BADD,EAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEJ,UAA1B;AAAsC,IAAA,QAAQ,EAAEI,CAAC,IAAID,YAAY,CAACC,CAAD;AAAjE,IAFD,CAFD,EAMC,uCAND,CADD;AAUA,CApCD;;AAsCAL,UAAU,CAACwB,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACzCL,EAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,QAAMH,GAAG,GAAG,MAAMvB,KAAK,CACrB,4DAA2D2B,OAAO,CAACC,GAAR,CAAYC,OAAQ,EAD1D,CAAvB;AAGAR,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,SAAO;AAAEO,IAAAA,IAAI,EAAEP;AAAR,GAAP;AACA,CAPD;;AASA,eAAetB,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Axios from 'axios';\n\nconst dictionary = () => {\n\tconst [searchWord, setSearchWord] = useState('');\n\t//   const [searchResult, setSearchResult] = useState(\"\");\n\tconst router = useRouter();\n\tconst handleChange = async e => {\n\t\tsetSearchWord(e.target.value);\n\t};\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst searchForm = {\n\t\t\tid: router.query.movieId,\n\t\t\t// title: ,\n\t\t\tword: searchWord,\n\t\t};\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t};\n\t\tconst body = JSON.stringify(searchForm);\n\t\tconsole.log(body);\n\t\tconst res = await Axios.post(`/movies/${router.query.movieId}/dict`, body, config);\n\t\tconsole.log(res);\n\t\tconsole.log('Reached the end!!!');\n\t};\n\tconst { movieId } = router.query;\n\treturn (\n\t\t<div>\n\t\t\t{movieId}\n\t\t\t<form onSubmit={e => handleSubmit(e)}>\n\t\t\t\t<label>Search</label>\n\t\t\t\t<input type='text' value={searchWord} onChange={e => handleChange(e)}></input>\n\t\t\t</form>\n\t\t\t<p>Hello dictionary!!!</p>\n\t\t</div>\n\t);\n};\n\ndictionary.getInitialProps = async ctx => {\n\tconsole.log(ctx);\n\tconst res = await Axios(\n\t\t`http://www.omdbapi.com/?i='tt0085574'/&type=movie&apikey=${process.env.OmdbKey}`\n\t);\n\tconsole.log(res);\n\treturn { data: res };\n};\n\nexport default dictionary;\n"]},"metadata":{},"sourceType":"module"}