{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/rohitmi0023/dict_movies_next/dict_movies/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport axios from 'axios';\nexport default function Home() {\n  var _useState = useState(''),\n      searchFormData = _useState[0],\n      setSearchFormData = _useState[1]; // const [searchResult, setSearchResult] = useState({})\n\n\n  var urlforSearch = \"http://www.omdbapi.com/?s=\\\"\".concat(searchFormData, \"\\\"&type=movie&apikey=9bc37d14\");\n  var urlforTitle = \"http://www.omdbapi.com/?t=\\\"\".concat(searchFormData, \"\\\"&type=movie&apikey=9bc37d14\");\n\n  var handleChange = function handleChange(e) {\n    var res;\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(urlforSearch));\n\n          case 2:\n            res = _context.sent;\n            console.log(res); // if (res.data.Response === 'True') {\n            //     setSearchResult(res)\n            // }\n            // else {\n            //     console.log(`Invalid Search...`)\n            //     setSearchResult(res)\n            // }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var res;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(urlforTitle));\n\n          case 3:\n            res = _context2.sent;\n            console.log(res); // if (res.data.Response === 'True') {\n            //     setSearchResult(res)\n            // }\n            // else {\n            //     console.log(`Invalid search...`)\n            //     setSearchResult(res)\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Next App\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Hello Nextjs\"), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Search\"), __jsx(\"input\", {\n    type: \"text\",\n    value: searchFormData,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/dict_movies/pages/index.js"],"names":["React","useState","Head","axios","Home","searchFormData","setSearchFormData","urlforSearch","urlforTitle","handleChange","e","get","res","console","log","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA,kBACeH,QAAQ,CAAC,EAAD,CADvB;AAAA,MACtBI,cADsB;AAAA,MACNC,iBADM,iBAE7B;;;AACA,MAAMC,YAAY,yCAAiCF,cAAjC,kCAAlB;AACA,MAAMG,WAAW,yCAAiCH,cAAjC,kCAAjB;;AAEA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEDP,KAAK,CAACQ,GAAN,CAAUJ,YAAV,CAFC;;AAAA;AAEbK,YAAAA,GAFa;AAGnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAHmB,CAInB;AACA;AACA;AACA;AACA;AACA;AACA;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAaA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAOL,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,CAAC,CAACM,cAAF;AADmB;AAAA,6CAEDb,KAAK,CAACQ,GAAN,CAAUH,WAAV,CAFC;;AAAA;AAEbI,YAAAA,GAFa;AAGnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAHmB,CAInB;AACA;AACA;AACA;AACA;AACA;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAOE;AAAM,IAAA,QAAQ,EAAE,kBAAAF,CAAC;AAAA,aAAIK,YAAY,CAACL,CAAD,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEL,cAA1B;AAA0C,IAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,aAAID,YAAY,CAACC,CAAD,CAAhB;AAAA,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPF,CADF;AAcD","sourcesContent":["import React, { useState } from 'react'\nimport Head from 'next/head'\nimport axios from 'axios'\n\nexport default function Home() {\n  const [searchFormData, setSearchFormData] = useState('')\n  // const [searchResult, setSearchResult] = useState({})\n  const urlforSearch = `http://www.omdbapi.com/?s=\"${searchFormData}\"&type=movie&apikey=9bc37d14`\n  const urlforTitle = `http://www.omdbapi.com/?t=\"${searchFormData}\"&type=movie&apikey=9bc37d14`\n\n  const handleChange = async (e) => {\n    // setSearchFormData(e.target.value)\n    const res = await axios.get(urlforSearch)\n    console.log(res)\n    // if (res.data.Response === 'True') {\n    //     setSearchResult(res)\n    // }\n    // else {\n    //     console.log(`Invalid Search...`)\n    //     setSearchResult(res)\n    // }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const res = await axios.get(urlforTitle)\n    console.log(res)\n    // if (res.data.Response === 'True') {\n    //     setSearchResult(res)\n    // }\n    // else {\n    //     console.log(`Invalid search...`)\n    //     setSearchResult(res)\n  }\n\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Next App</title>\n      </Head>\n      <p>\n        Hello Nextjs\n      </p>\n      <form onSubmit={e => handleSubmit(e)}>\n        <label>Search</label>\n        <input type=\"text\" value={searchFormData} onChange={e => handleChange(e)} />\n      </form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}