{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/rohitmi0023/dict_movies_next/dict_movies/pages/movies/[movieId].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'node-fetch';\n\nvar movieId = function movieId() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, \"Helooo\"));\n}; // This function gets called at build time\n//getStaticProps so that you can fetch the data about the post with this id and use it to pre-render the page:\n// export async function getStaticProps({ params }) {\n// params contains the post `id`.\n// If the route is like /posts/1, then params.id is 1\n// const res = await fetch(`https://.../posts/${params.id}`)\n// const post = await res.json()\n// Pass post data to the page via props\n//     return { props: { post } }\n// }","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/dict_movies/pages/movies/[movieId].js"],"names":["fetch","movieId"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ;AAKH,CAND,C,CAQA;AAcA;AACA;AACI;AACA;AACA;AACA;AAEA;AACJ;AACA","sourcesContent":["import fetch from 'node-fetch'\n\nconst movieId = () => {\n    return (\n        <div>\n            <p>Helooo</p>\n        </div>\n    )\n}\n\n// This function gets called at build time\nexport async function getStaticPaths() {\n    // Call an external API endpoint to get posts\n    // const res = await fetch('https://.../posts')\n    // const posts = await res.json()\n\n    // Get the paths we want to pre-render based on posts\n    const paths = 495\n\n    // We'll pre-render only these paths at build time.\n    // { fallback: false } means other routes should 404.\n    return { paths, fallback: false }\n}\n\n//getStaticProps so that you can fetch the data about the post with this id and use it to pre-render the page:\n// export async function getStaticProps({ params }) {\n    // params contains the post `id`.\n    // If the route is like /posts/1, then params.id is 1\n    // const res = await fetch(`https://.../posts/${params.id}`)\n    // const post = await res.json()\n\n    // Pass post data to the page via props\n//     return { props: { post } }\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}