{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\nimport ExposurePlus1TwoToneIcon from '@material-ui/icons/ExposurePlus1TwoTone';\nimport ExposureNeg1TwoToneIcon from '@material-ui/icons/ExposureNeg1TwoTone';\n\nconst WordResults = ({\n  words\n}) => {\n  if (words.data) {\n    const wordList = words.data.map(each => {\n      return __jsx(\"span\", {\n        key: each.id\n      }, each.word, \" \", '  ', ExposurePlus1TwoToneIcon, \" \", '  ', \" \", ExposureNeg1TwoToneIcon, '  ');\n    });\n  }\n\n  return __jsx(\"div\", null, words.data ? words.data.length ? __jsx(\"div\", null, wordList) : __jsx(\"p\", null, \"Nothing found!!!\") : __jsx(\"p\", null, \"Loading...\"));\n};\n\nexport default WordResults;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/WordResults.js"],"names":["React","useState","useEffect","Axios","useRouter","ExposurePlus1TwoToneIcon","ExposureNeg1TwoToneIcon","WordResults","words","data","wordList","map","each","id","word","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,uBAAP,MAAoC,wCAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAClC,MAAIA,KAAK,CAACC,IAAV,EAAgB;AACf,UAAMC,QAAQ,GAAGF,KAAK,CAACC,IAAN,CAAWE,GAAX,CAAeC,IAAI,IAAI;AACvC,aACC;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,SACED,IAAI,CAACE,IADP,OACc,IADd,EAEET,wBAFF,OAE6B,IAF7B,OAEoCC,uBAFpC,EAGE,IAHF,CADD;AAOA,KARgB,CAAjB;AASA;;AAED,SACC,mBACEE,KAAK,CAACC,IAAN,GACAD,KAAK,CAACC,IAAN,CAAWM,MAAX,GACC,mBAUEL,QAVF,CADD,GAcC,oCAfD,GAkBA,8BAnBF,CADD;AAwBA,CArCD;;AAuCA,eAAeH,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\nimport ExposurePlus1TwoToneIcon from '@material-ui/icons/ExposurePlus1TwoTone';\nimport ExposureNeg1TwoToneIcon from '@material-ui/icons/ExposureNeg1TwoTone';\n\nconst WordResults = ({ words }) => {\n\tif (words.data) {\n\t\tconst wordList = words.data.map(each => {\n\t\t\treturn (\n\t\t\t\t<span key={each.id}>\n\t\t\t\t\t{each.word} {'  '}\n\t\t\t\t\t{ExposurePlus1TwoToneIcon} {'  '} {ExposureNeg1TwoToneIcon}\n\t\t\t\t\t{'  '}\n\t\t\t\t</span>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{words.data ? (\n\t\t\t\twords.data.length ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* {words.data.map(each => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<span key={each.id}>\n\t\t\t\t\t\t\t\t\t{each.word} {'  '}\n\t\t\t\t\t\t\t\t\t{ExposurePlus1TwoToneIcon} {'  '} {ExposureNeg1TwoToneIcon}\n\t\t\t\t\t\t\t\t\t{'  '}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})} */}\n\t\t\t\t\t\t{wordList}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Nothing found!!!</p>\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default WordResults;\n"]},"metadata":{},"sourceType":"module"}