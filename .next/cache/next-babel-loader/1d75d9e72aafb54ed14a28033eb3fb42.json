{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\nimport NavBar from '../components/NavBar';\nimport Fab from '@material-ui/core/Fab';\n\nvar Movies = function Movies() {\n  var _useState = useState(''),\n      currentMovie = _useState[0],\n      setCurrentMovie = _useState[1];\n\n  var router = useRouter();\n  var movieId = router.query.movieId;\n\n  var fetchData = function fetchData() {\n    var res;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios(\"http://www.omdbapi.com/?i=\".concat(movieId, \"&type=movie&apikey=\").concat(process.env.OmdbKey)));\n\n          case 2:\n            res = _context.sent;\n            setCurrentMovie(res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var rating = currentMovie.Ratings;\n\n  if (rating) {\n    rating = rating.map(function (each) {\n      return __jsx(\"div\", {\n        key: Math.random()\n      }, __jsx(\"p\", null, each.Source, \": \", each.Value));\n    });\n  }\n\n  return __jsx(Fragment, null, __jsx(NavBar, null), __jsx(\"br\", null), __jsx(\"p\", {\n    style: {\n      margin: '0 auto'\n    }\n  }, \"Movie Description\"), __jsx(Fab, {\n    style: {\n      \"float\": 'right'\n    },\n    variant: \"extended\"\n  }, __jsx(Link, {\n    href: \"/[movieId]/dict\",\n    as: \"/\".concat(movieId, \"/dict\")\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    }\n  }, \"Dictionary\"))), __jsx(\"br\", null), currentMovie ? __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(\"img\", {\n    src: currentMovie.Poster,\n    alt: \"Movie poster\",\n    style: {\n      position: 'absolute'\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(\"p\", null, \"Movie Name: \", currentMovie.Title), __jsx(\"p\", null, \"Released on : \", currentMovie.Released), __jsx(\"p\", null, \"Directed by: \", currentMovie.Director), __jsx(\"p\", null, \"Genre: \", currentMovie.Genre), __jsx(\"span\", null, rating))) : __jsx(\"p\", null, \"Loading...\"));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/[movieId].js"],"names":["axios","useRouter","useEffect","useState","Fragment","Link","NavBar","Fab","Movies","currentMovie","setCurrentMovie","router","movieId","query","fetchData","process","env","OmdbKey","res","data","rating","Ratings","map","each","Math","random","Source","Value","margin","textDecoration","position","Poster","Title","Released","Director","Genre"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACoBL,QAAQ,CAAC,EAAD,CAD5B;AAAA,MACbM,YADa;AAAA,MACCC,eADD;;AAEpB,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AAFoB,MAGZW,OAHY,GAGAD,MAAM,CAACE,KAHP,CAGZD,OAHY;;AAIpB,MAAME,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCd,KAAK,qCACOY,OADP,gCACoCG,OAAO,CAACC,GAAR,CAAYC,OADhD,EADN;;AAAA;AACXC,YAAAA,GADW;AAIjBR,YAAAA,eAAe,CAACQ,GAAG,CAACC,IAAL,CAAf;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAMAjB,EAAAA,SAAS,CAAC,YAAM;AACfY,IAAAA,SAAS;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAIM,MAAM,GAAGX,YAAY,CAACY,OAA1B;;AACA,MAAID,MAAJ,EAAY;AACXA,IAAAA,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAW,UAAAC,IAAI,EAAI;AAC3B,aACC;AAAK,QAAA,GAAG,EAAEC,IAAI,CAACC,MAAL;AAAV,SACC,iBACEF,IAAI,CAACG,MADP,QACiBH,IAAI,CAACI,KADtB,CADD,CADD;AAOA,KARQ,CAAT;AASA;;AACD,SACC,MAAC,QAAD,QACC,MAAC,MAAD,OADD,EAEC,iBAFD,EAGC;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAV,yBAHD,EAIC,MAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAE,eAAO;AAAT,KAAZ;AAAgC,IAAA,OAAO,EAAC;AAAxC,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAA6B,IAAA,EAAE,aAAMhB,OAAN;AAA/B,KACC;AAAG,IAAA,KAAK,EAAE;AAAEiB,MAAAA,cAAc,EAAE;AAAlB;AAAV,kBADD,CADD,CAJD,EASC,iBATD,EAUEpB,YAAY,GACZ;AAAK,IAAA,KAAK,EAAE;AAAEqB,MAAAA,QAAQ,EAAE;AAAZ;AAAZ,KACC;AACC,IAAA,GAAG,EAAErB,YAAY,CAACsB,MADnB;AAEC,IAAA,GAAG,EAAC,cAFL;AAGC,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE;AAAZ;AAHR,IADD,EAMC;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ;AAAZ,KACC,iCAAgBrB,YAAY,CAACuB,KAA7B,CADD,EAEC,mCAAkBvB,YAAY,CAACwB,QAA/B,CAFD,EAGC,kCAAiBxB,YAAY,CAACyB,QAA9B,CAHD,EAIC,4BAAWzB,YAAY,CAAC0B,KAAxB,CAJD,EAKC,oBAAOf,MAAP,CALD,CAND,CADY,GAgBZ,8BA1BF,CADD;AA+BA,CAxDD;;AA0DA,eAAeZ,MAAf","sourcesContent":["import axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\nimport NavBar from '../components/NavBar';\nimport Fab from '@material-ui/core/Fab';\n\nconst Movies = () => {\n\tconst [currentMovie, setCurrentMovie] = useState('');\n\tconst router = useRouter();\n\tconst { movieId } = router.query;\n\tconst fetchData = async () => {\n\t\tconst res = await axios(\n\t\t\t`http://www.omdbapi.com/?i=${movieId}&type=movie&apikey=${process.env.OmdbKey}`\n\t\t);\n\t\tsetCurrentMovie(res.data);\n\t};\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\tlet rating = currentMovie.Ratings;\n\tif (rating) {\n\t\trating = rating.map(each => {\n\t\t\treturn (\n\t\t\t\t<div key={Math.random()}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{each.Source}: {each.Value}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<NavBar />\n\t\t\t<br />\n\t\t\t<p style={{ margin: '0 auto' }}>Movie Description</p>\n\t\t\t<Fab style={{ float: 'right' }} variant='extended'>\n\t\t\t\t<Link href='/[movieId]/dict' as={`/${movieId}/dict`}>\n\t\t\t\t\t<a style={{ textDecoration: 'none' }}>Dictionary</a>\n\t\t\t\t</Link>\n\t\t\t</Fab>\n\t\t\t<br />\n\t\t\t{currentMovie ? (\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={currentMovie.Poster}\n\t\t\t\t\t\talt='Movie poster'\n\t\t\t\t\t\tstyle={{ position: 'absolute' }}\n\t\t\t\t\t></img>\n\t\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t\t<p>Movie Name: {currentMovie.Title}</p>\n\t\t\t\t\t\t<p>Released on : {currentMovie.Released}</p>\n\t\t\t\t\t\t<p>Directed by: {currentMovie.Director}</p>\n\t\t\t\t\t\t<p>Genre: {currentMovie.Genre}</p>\n\t\t\t\t\t\t<span>{rating}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}