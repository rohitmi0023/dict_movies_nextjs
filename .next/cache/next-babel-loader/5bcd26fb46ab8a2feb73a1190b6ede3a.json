{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchResult from './SearchResult';\nimport TextField from '@material-ui/core/TextField';\n\nconst SearchMovies = () => {\n  console.log(process.env);\n  const {\n    0: searchFormData,\n    1: setSearchFormData\n  } = useState('');\n  const {\n    0: searchResult,\n    1: setSearchResult\n  } = useState({}); // for searching, it gives an array of lists\n\n  const urlforSearch = `https://www.omdbapi.com/?s=\"${searchFormData}\"&type=movie&apikey=${process.env.OmdbKey}`; // for title specific, it gives a pariticular movie\n\n  const urlforTitle = `https://www.omdbapi.com/?t=\"${searchFormData}\"&type=movie&apikey=${process.env.OmdbKey}`;\n\n  const handleChange = async e => {\n    setSearchFormData(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await axios.get(urlforTitle);\n    setSearchResult(res);\n  };\n\n  useEffect(() => {\n    axios.get(urlforSearch).then(res => {\n      setSearchResult(res);\n    });\n  }, [searchFormData]);\n  return __jsx(\"div\", null, __jsx(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    style: {\n      textAlign: 'center',\n      paddingTop: '15px'\n    }\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    type: \"text\",\n    value: searchFormData,\n    onChange: e => handleChange(e),\n    label: \"Search for movies\"\n  })), __jsx(\"br\", null), searchFormData ? searchResult.data && searchResult.data.Response === 'True' ? __jsx(SearchResult, {\n    searchresult: searchResult\n  }) : searchResult.data && searchResult.data.Response === 'False' && __jsx(\"p\", {\n    className: \"resultsText\"\n  }, searchResult.data.Error) : __jsx(\"p\", {\n    className: \"resultsText\"\n  }, \"Nothing to search!!!\"));\n};\n\nexport default SearchMovies;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/src/components/SearchMovies.js"],"names":["React","useState","useEffect","axios","SearchResult","TextField","SearchMovies","console","log","process","env","searchFormData","setSearchFormData","searchResult","setSearchResult","urlforSearch","OmdbKey","urlforTitle","handleChange","e","target","value","handleSubmit","preventDefault","res","get","then","textAlign","paddingTop","data","Response","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAApB;AACA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCX,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAAA,OAACY,YAAD;AAAA,OAAeC;AAAf,MAAkCb,QAAQ,CAAC,EAAD,CAAhD,CAH0B,CAI1B;;AACA,QAAMc,YAAY,GAAI,+BAA8BJ,cAAe,uBAAsBF,OAAO,CAACC,GAAR,CAAYM,OAAQ,EAA7G,CAL0B,CAM1B;;AACA,QAAMC,WAAW,GAAI,+BAA8BN,cAAe,uBAAsBF,OAAO,CAACC,GAAR,CAAYM,OAAQ,EAA5G;;AAEA,QAAME,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC/BP,IAAAA,iBAAiB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACA,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAMH,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAUR,WAAV,CAAlB;AACAH,IAAAA,eAAe,CAACU,GAAD,CAAf;AACA,GAJD;;AAMAtB,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,KAAK,CAACsB,GAAN,CAAUV,YAAV,EAAwBW,IAAxB,CAA6BF,GAAG,IAAI;AACnCV,MAAAA,eAAe,CAACU,GAAD,CAAf;AACA,KAFD;AAGA,GAJQ,EAIN,CAACb,cAAD,CAJM,CAAT;AAMA,SACC,mBACC;AACC,IAAA,QAAQ,EAAEQ,CAAC,IAAIG,YAAY,CAACH,CAAD,CAD5B;AAEC,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE;AAAnC;AAFR,KAIC,MAAC,SAAD;AACC,IAAA,EAAE,EAAC,gBADJ;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,KAAK,EAAEjB,cAHR;AAIC,IAAA,QAAQ,EAAEQ,CAAC,IAAID,YAAY,CAACC,CAAD,CAJ5B;AAKC,IAAA,KAAK,EAAC;AALP,IAJD,CADD,EAaC,iBAbD,EAcER,cAAc,GACdE,YAAY,CAACgB,IAAb,IAAqBhB,YAAY,CAACgB,IAAb,CAAkBC,QAAlB,KAA+B,MAApD,GACC,MAAC,YAAD;AAAc,IAAA,YAAY,EAAEjB;AAA5B,IADD,GAGCA,YAAY,CAACgB,IAAb,IACAhB,YAAY,CAACgB,IAAb,CAAkBC,QAAlB,KAA+B,OAD/B,IAEC;AAAG,IAAA,SAAS,EAAC;AAAb,KAA4BjB,YAAY,CAACgB,IAAb,CAAkBE,KAA9C,CANY,GAUd;AAAG,IAAA,SAAS,EAAC;AAAb,4BAxBF,CADD;AA6BA,CAtDD;;AAwDA,eAAezB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchResult from './SearchResult';\nimport TextField from '@material-ui/core/TextField';\n\nconst SearchMovies = () => {\n\tconsole.log(process.env);\n\tconst [searchFormData, setSearchFormData] = useState('');\n\tconst [searchResult, setSearchResult] = useState({});\n\t// for searching, it gives an array of lists\n\tconst urlforSearch = `https://www.omdbapi.com/?s=\"${searchFormData}\"&type=movie&apikey=${process.env.OmdbKey}`;\n\t// for title specific, it gives a pariticular movie\n\tconst urlforTitle = `https://www.omdbapi.com/?t=\"${searchFormData}\"&type=movie&apikey=${process.env.OmdbKey}`;\n\n\tconst handleChange = async e => {\n\t\tsetSearchFormData(e.target.value);\n\t};\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst res = await axios.get(urlforTitle);\n\t\tsetSearchResult(res);\n\t};\n\n\tuseEffect(() => {\n\t\taxios.get(urlforSearch).then(res => {\n\t\t\tsetSearchResult(res);\n\t\t});\n\t}, [searchFormData]);\n\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\t\tonSubmit={e => handleSubmit(e)}\n\t\t\t\tstyle={{ textAlign: 'center', paddingTop: '15px' }}\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tid='standard-basic'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={searchFormData}\n\t\t\t\t\tonChange={e => handleChange(e)}\n\t\t\t\t\tlabel='Search for movies'\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<br />\n\t\t\t{searchFormData ? (\n\t\t\t\tsearchResult.data && searchResult.data.Response === 'True' ? (\n\t\t\t\t\t<SearchResult searchresult={searchResult} />\n\t\t\t\t) : (\n\t\t\t\t\tsearchResult.data &&\n\t\t\t\t\tsearchResult.data.Response === 'False' && (\n\t\t\t\t\t\t<p className='resultsText'>{searchResult.data.Error}</p>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<p className='resultsText'>Nothing to search!!!</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default SearchMovies;\n"]},"metadata":{},"sourceType":"module"}