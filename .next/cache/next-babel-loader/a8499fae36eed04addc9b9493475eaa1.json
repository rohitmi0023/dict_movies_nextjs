{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchResult from './SearchResult';\nimport TextField from '@material-ui/core/TextField';\n\nvar SearchMovies = function SearchMovies() {\n  console.log(process.env);\n\n  var _useState = useState(''),\n      searchFormData = _useState[0],\n      setSearchFormData = _useState[1];\n\n  var _useState2 = useState({}),\n      searchResult = _useState2[0],\n      setSearchResult = _useState2[1]; // for searching, it gives an array of lists\n\n\n  var urlforSearch = \"https://www.omdbapi.com/?s=\\\"\".concat(searchFormData, \"\\\"&type=movie&apikey=\").concat(process.env.OmdbKey); // for title specific, it gives a pariticular movie\n\n  var urlforTitle = \"https://www.omdbapi.com/?t=\\\"\".concat(searchFormData, \"\\\"&type=movie&apikey=\").concat(process.env.OmdbKey);\n\n  var handleChange = function handleChange(e) {\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSearchFormData(e.target.value);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var res;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(urlforTitle));\n\n          case 3:\n            res = _context2.sent;\n            setSearchResult(res);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    axios.get(urlforSearch).then(function (res) {\n      setSearchResult(res);\n    });\n  }, [searchFormData]);\n  return __jsx(\"div\", null, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    style: {\n      textAlign: 'center',\n      paddingTop: '15px'\n    }\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    type: \"text\",\n    value: searchFormData,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    label: \"Search for movies\"\n  })), __jsx(\"br\", null), searchFormData ? searchResult.data && searchResult.data.Response === 'True' ? __jsx(SearchResult, {\n    searchresult: searchResult\n  }) : searchResult.data && searchResult.data.Response === 'False' && __jsx(\"p\", {\n    className: \"resultsText\"\n  }, searchResult.data.Error) : __jsx(\"p\", {\n    className: \"resultsText\"\n  }, \"Nothing to search!!!\"));\n};\n\nexport default SearchMovies;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/src/components/SearchMovies.js"],"names":["React","useState","useEffect","axios","SearchResult","TextField","SearchMovies","console","log","process","env","searchFormData","setSearchFormData","searchResult","setSearchResult","urlforSearch","OmdbKey","urlforTitle","handleChange","e","target","value","handleSubmit","preventDefault","get","res","then","textAlign","paddingTop","data","Response","Error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAApB;;AAD0B,kBAEkBT,QAAQ,CAAC,EAAD,CAF1B;AAAA,MAEnBU,cAFmB;AAAA,MAEHC,iBAFG;;AAAA,mBAGcX,QAAQ,CAAC,EAAD,CAHtB;AAAA,MAGnBY,YAHmB;AAAA,MAGLC,eAHK,kBAI1B;;;AACA,MAAMC,YAAY,0CAAkCJ,cAAlC,kCAAuEF,OAAO,CAACC,GAAR,CAAYM,OAAnF,CAAlB,CAL0B,CAM1B;;AACA,MAAMC,WAAW,0CAAkCN,cAAlC,kCAAuEF,OAAO,CAACC,GAAR,CAAYM,OAAnF,CAAjB;;AAEA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACpBP,YAAAA,iBAAiB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBA,YAAAA,CAAC,CAACI,cAAF;AADoB;AAAA,6CAEFpB,KAAK,CAACqB,GAAN,CAAUP,WAAV,CAFE;;AAAA;AAEdQ,YAAAA,GAFc;AAGpBX,YAAAA,eAAe,CAACW,GAAD,CAAf;;AAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAMAvB,EAAAA,SAAS,CAAC,YAAM;AACfC,IAAAA,KAAK,CAACqB,GAAN,CAAUT,YAAV,EAAwBW,IAAxB,CAA6B,UAAAD,GAAG,EAAI;AACnCX,MAAAA,eAAe,CAACW,GAAD,CAAf;AACA,KAFD;AAGA,GAJQ,EAIN,CAACd,cAAD,CAJM,CAAT;AAMA,SACC,mBACC;AACC,IAAA,QAAQ,EAAE,kBAAAQ,CAAC;AAAA,aAAIG,YAAY,CAACH,CAAD,CAAhB;AAAA,KADZ;AAEC,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE;AAAnC;AAFR,KAIC,MAAC,SAAD;AACC,IAAA,EAAE,EAAC,gBADJ;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,KAAK,EAAEjB,cAHR;AAIC,IAAA,QAAQ,EAAE,kBAAAQ,CAAC;AAAA,aAAID,YAAY,CAACC,CAAD,CAAhB;AAAA,KAJZ;AAKC,IAAA,KAAK,EAAC;AALP,IAJD,CADD,EAaC,iBAbD,EAcER,cAAc,GACdE,YAAY,CAACgB,IAAb,IAAqBhB,YAAY,CAACgB,IAAb,CAAkBC,QAAlB,KAA+B,MAApD,GACC,MAAC,YAAD;AAAc,IAAA,YAAY,EAAEjB;AAA5B,IADD,GAGCA,YAAY,CAACgB,IAAb,IACAhB,YAAY,CAACgB,IAAb,CAAkBC,QAAlB,KAA+B,OAD/B,IAEC;AAAG,IAAA,SAAS,EAAC;AAAb,KAA4BjB,YAAY,CAACgB,IAAb,CAAkBE,KAA9C,CANY,GAUd;AAAG,IAAA,SAAS,EAAC;AAAb,4BAxBF,CADD;AA6BA,CAtDD;;AAwDA,eAAezB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchResult from './SearchResult';\nimport TextField from '@material-ui/core/TextField';\n\nconst SearchMovies = () => {\n\tconsole.log(process.env);\n\tconst [searchFormData, setSearchFormData] = useState('');\n\tconst [searchResult, setSearchResult] = useState({});\n\t// for searching, it gives an array of lists\n\tconst urlforSearch = `https://www.omdbapi.com/?s=\"${searchFormData}\"&type=movie&apikey=${process.env.OmdbKey}`;\n\t// for title specific, it gives a pariticular movie\n\tconst urlforTitle = `https://www.omdbapi.com/?t=\"${searchFormData}\"&type=movie&apikey=${process.env.OmdbKey}`;\n\n\tconst handleChange = async e => {\n\t\tsetSearchFormData(e.target.value);\n\t};\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst res = await axios.get(urlforTitle);\n\t\tsetSearchResult(res);\n\t};\n\n\tuseEffect(() => {\n\t\taxios.get(urlforSearch).then(res => {\n\t\t\tsetSearchResult(res);\n\t\t});\n\t}, [searchFormData]);\n\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\t\tonSubmit={e => handleSubmit(e)}\n\t\t\t\tstyle={{ textAlign: 'center', paddingTop: '15px' }}\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tid='standard-basic'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={searchFormData}\n\t\t\t\t\tonChange={e => handleChange(e)}\n\t\t\t\t\tlabel='Search for movies'\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<br />\n\t\t\t{searchFormData ? (\n\t\t\t\tsearchResult.data && searchResult.data.Response === 'True' ? (\n\t\t\t\t\t<SearchResult searchresult={searchResult} />\n\t\t\t\t) : (\n\t\t\t\t\tsearchResult.data &&\n\t\t\t\t\tsearchResult.data.Response === 'False' && (\n\t\t\t\t\t\t<p className='resultsText'>{searchResult.data.Error}</p>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<p className='resultsText'>Nothing to search!!!</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default SearchMovies;\n"]},"metadata":{},"sourceType":"module"}