{"ast":null,"code":"var _jsxFileName = \"/home/rohitmi0023/dict_movies_next/dict_movies/components/SearchResult.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\n\nconst SearchResult = ({\n  searchresult\n}) => {\n  const router = useRouter();\n  let moviesList = [];\n  const movies = searchresult.data.Search;\n\n  const handleClick = movie => {\n    // e.preventDefault()\n    console.log(movie);\n    console.log(movie.target);\n    console.log(movie.type);\n    console.log(movie.currentTarget); // router.push(`/movies/:movie`)\n  };\n\n  if (movies) {\n    moviesList = movies.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        onClick: movie => handleClick(movie),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }), __jsx(\"p\", {\n        className: \"movieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  } else {\n    moviesList.push(searchresult.data);\n    moviesList = moviesList.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        onClick: movie => handleClick(movie),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }), __jsx(\"p\", {\n        className: \"movieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Search Results...\"), moviesList);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/dict_movies/components/SearchResult.js"],"names":["React","useRouter","SearchResult","searchresult","router","moviesList","movies","data","Search","handleClick","movie","console","log","target","type","currentTarget","map","imdbID","Poster","Title","Year","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACvC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAII,UAAU,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAGH,YAAY,CAACI,IAAb,CAAkBC,MAAjC;;AACA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,IAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,aAAlB,EAL2B,CAM3B;AACH,GAPD;;AASA,MAAIT,MAAJ,EAAY;AACRD,IAAAA,UAAU,GAAGC,MAAM,CAACU,GAAP,CAAYN,KAAD,IAAW;AAC/B,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACO,MAAhB;AAAwB,QAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,OAAO,EAAGP,KAAD,IAAWD,WAAW,CAACC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACQ,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BR,KAAK,CAACS,KAAjC,QAA0CT,KAAK,CAACU,IAAhD,MAFJ,CADJ,CADJ;AAQH,KATY,CAAb;AAUH,GAXD,MAYK;AACDf,IAAAA,UAAU,CAACgB,IAAX,CAAgBlB,YAAY,CAACI,IAA7B;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACW,GAAX,CAAgBN,KAAD,IAAW;AACnC,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACO,MAAhB;AAAwB,QAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,OAAO,EAAGP,KAAD,IAAWD,WAAW,CAACC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACQ,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BR,KAAK,CAACS,KAAjC,QAA0CT,KAAK,CAACU,IAAhD,MAFJ,CADJ,CADJ;AAQH,KATY,CAAb;AAUH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAIKf,UAJL,CADJ;AAQH,CA9CD;;AAgDA,eAAeH,YAAf","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\n\nconst SearchResult = ({ searchresult }) => {\n    const router = useRouter()\n    let moviesList = []\n    const movies = searchresult.data.Search\n    const handleClick = (movie) => {\n        // e.preventDefault()\n        console.log(movie)\n        console.log(movie.target)\n        console.log(movie.type)\n        console.log(movie.currentTarget)\n        // router.push(`/movies/:movie`)\n    }\n\n    if (movies) {\n        moviesList = movies.map((movie) => {\n            return (\n                <div key={movie.imdbID} className='movie' >\n                    <a onClick={(movie) => handleClick(movie)}>\n                        <img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\n                    </a>\n                </div>\n            )\n        })\n    }\n    else {\n        moviesList.push(searchresult.data)\n        moviesList = moviesList.map((movie) => {\n            return (\n                <div key={movie.imdbID} className='movie' >\n                    <a onClick={(movie) => handleClick(movie)}>\n                        <img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\n                    </a>\n                </div>\n            )\n        })\n    }\n    return (\n        <div>\n            <p>\n                Search Results...\n                </p>\n            {moviesList}\n        </div >\n    )\n}\n\nexport default SearchResult"]},"metadata":{},"sourceType":"module"}