{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport WordResults from '../../components/WordResults';\nimport NavBar from '../../components/NavBar';\nimport { Container, Button, TextField } from '@material-ui/core';\n\nvar dictionary = function dictionary(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(''),\n      searchWord = _useState[0],\n      setSearchWord = _useState[1];\n\n  var _useState2 = useState([]),\n      words = _useState2[0],\n      setWords = _useState2[1];\n\n  var _useState3 = useState([]),\n      matchedWords = _useState3[0],\n      setMatchedWords = _useState3[1];\n\n  var _useState4 = useState(),\n      wordErrors = _useState4[0],\n      setWordErrors = _useState4[1];\n\n  var _useState5 = useState(false),\n      file = _useState5[0],\n      setFile = _useState5[1];\n\n  var handleChange = function handleChange(e) {\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setWordErrors('');\n            setSearchWord(e.target.value);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var router = useRouter();\n  var imdbID = data.imdbID,\n      Title = data.Title,\n      Year = data.Year,\n      Poster = data.Poster,\n      Genre = data.Genre,\n      Director = data.Director,\n      Actors = data.Actors,\n      Metascore = data.Metascore,\n      imdbRating = data.imdbRating,\n      imdbVotes = data.imdbVotes;\n\n  var handleSubmit = function handleSubmit(e) {\n    var searchForm, config, body, res, config2;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            searchForm = {\n              imdbID: imdbID,\n              Title: Title,\n              searchWord: searchWord,\n              Year: Year,\n              Poster: Poster,\n              Genre: Genre,\n              Director: Director,\n              Actors: Actors,\n              Metascore: Metascore,\n              imdbRating: imdbRating,\n              imdbVotes: imdbVotes\n            };\n            _context2.prev = 2;\n            config = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            body = JSON.stringify(searchForm);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(Axios.post(\"/api/\".concat(router.query.movieId, \"/dict\"), body, config));\n\n          case 7:\n            res = _context2.sent;\n            alert(res.data);\n            setSearchWord('');\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](2);\n\n            if (_context2.t0.response) {\n              setWordErrors(_context2.t0.response.data.errors[0].msg);\n            }\n\n          case 15:\n            _context2.prev = 15;\n            config2 = {\n              'Content-Type': 'application/json'\n            };\n            Axios.get(\"/api/\".concat(router.query.movieId, \"/dict\"), config2).then(function (res) {\n              setWords(res);\n            });\n            _context2.next = 24;\n            break;\n\n          case 20:\n            _context2.prev = 20;\n            _context2.t1 = _context2[\"catch\"](15);\n\n            if (!_context2.t1) {\n              _context2.next = 24;\n              break;\n            }\n\n            throw _context2.t1;\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 12], [15, 20]], Promise);\n  };\n\n  useEffect(function () {\n    var config = {\n      'Content-Type': 'application/json'\n    };\n    Axios.get(\"/api/\".concat(router.query.movieId, \"/dict\"), config).then(function (res) {\n      setWords(res);\n    });\n    var config2 = {\n      'Content-Type': 'application/json'\n    };\n    Axios.get(\"/api/\".concat(router.query.movieId, \"/subtitles\"), config2).then(function (res) {\n      // console.log(res);\n      setFile(res.data);\n    });\n  }, []);\n\n  var handleSearch = function handleSearch(e) {\n    var filterWords, res, matchedWordss;\n    return _regeneratorRuntime.async(function handleSearch$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (words.data.length) {\n              _context3.next = 4;\n              break;\n            }\n\n            alert(\"No word is added yet!\");\n            _context3.next = 11;\n            break;\n\n          case 4:\n            filterWords = function filterWords(item) {\n              if (res.data.data.search(item.word) === -1) {\n                return false;\n              } else {\n                setMatchedWords(function (prevArray) {\n                  return [].concat(_toConsumableArray(prevArray), [item]);\n                });\n                return true;\n              }\n            };\n\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(Axios.get(\"/api/\".concat(data.imdbID, \"/dict/matched\")));\n\n          case 7:\n            res = _context3.sent;\n            setMatchedWords([]);\n            matchedWordss = words.data.filter(filterWords);\n            console.log(matchedWordss); // setMatchedWords(matchedWordss);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", null, console.log(matchedWords), __jsx(Head, null, __jsx(\"title\", null, \"Movies Words\")), __jsx(NavBar, null), __jsx(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '20px'\n    }\n  }, data.Title), __jsx(Container, null, __jsx(\"form\", {\n    method: \"POST\",\n    action: \"/api/\".concat(data.imdbID, \"/subtitles\"),\n    enctype: \"multipart/form-data\",\n    style: {\n      display: 'inline',\n      position: 'absolute'\n    }\n  }, __jsx(\"input\", {\n    style: {\n      fontSize: '17px',\n      width: '225px'\n    },\n    type: \"file\",\n    name: \"profile\",\n    placeholder: \"Upload it's subtitles\"\n  }), __jsx(\"button\", {\n    style: {\n      fontSize: '17px'\n    }\n  }, \"Upload subtitle\")), __jsx(\"br\", null), file ? __jsx(Button, {\n    variant: \"contained\",\n    onClick: function onClick(e) {\n      return handleSearch(e);\n    },\n    style: {\n      \"float\": 'right',\n      position: 'relative'\n    }\n  }, \"Search\") : null, __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    }\n  }, __jsx(TextField, {\n    error: Boolean(wordErrors),\n    value: searchWord,\n    label: wordErrors ? 'Error' : 'Add a word',\n    helperText: wordErrors,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    placeholder: \"Enter the word\"\n  })), __jsx(\"br\", null), matchedWords.length > 0 && __jsx(\"div\", {\n    style: {\n      display: 'inlineFlow'\n    }\n  }, __jsx(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '18px'\n    }\n  }, \"Matched words...\"), matchedWords.map(function (each) {\n    return __jsx(\"div\", {\n      style: {\n        border: '2px dashed black',\n        margin: '5px 5px',\n        fontWeight: '600',\n        fontStyle: 'italic',\n        padding: '10px 10px',\n        display: 'inline-block'\n      }\n    }, each.word);\n  })), __jsx(\"br\", null), __jsx(WordResults, {\n    words: words\n  })));\n};\n\ndictionary.getInitialProps = function _callee(ctx) {\n  var _res, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!ctx.query.movieId) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?i=\".concat(ctx.query.movieId, \"&type=movie&apikey=\").concat(process.env.OmdbKey)));\n\n        case 3:\n          _res = _context4.sent;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(_res.json());\n\n        case 6:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default dictionary;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/[movieId]/dict.js"],"names":["React","Fragment","useState","useEffect","Head","Axios","fetch","useRouter","WordResults","NavBar","Container","Button","TextField","dictionary","data","searchWord","setSearchWord","words","setWords","matchedWords","setMatchedWords","wordErrors","setWordErrors","file","setFile","handleChange","e","target","value","router","imdbID","Title","Year","Poster","Genre","Director","Actors","Metascore","imdbRating","imdbVotes","handleSubmit","preventDefault","searchForm","config","headers","body","JSON","stringify","post","query","movieId","res","alert","response","errors","msg","config2","get","then","handleSearch","length","filterWords","item","search","word","prevArray","matchedWordss","filter","console","log","textAlign","fontSize","display","position","width","Boolean","map","each","border","margin","fontWeight","fontStyle","padding","getInitialProps","ctx","process","env","OmdbKey","json"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport WordResults from '../../components/WordResults';\nimport NavBar from '../../components/NavBar';\nimport { Container, Button, TextField } from '@material-ui/core';\n\nconst dictionary = ({ data }) => {\n\tconst [searchWord, setSearchWord] = useState('');\n\tconst [words, setWords] = useState([]);\n\tconst [matchedWords, setMatchedWords] = useState([]);\n\tconst [wordErrors, setWordErrors] = useState();\n\tconst [file, setFile] = useState(false);\n\n\tconst handleChange = async e => {\n\t\tsetWordErrors('');\n\t\tsetSearchWord(e.target.value);\n\t};\n\tconst router = useRouter();\n\tconst {\n\t\timdbID,\n\t\tTitle,\n\t\tYear,\n\t\tPoster,\n\t\tGenre,\n\t\tDirector,\n\t\tActors,\n\t\tMetascore,\n\t\timdbRating,\n\t\timdbVotes,\n\t} = data;\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst searchForm = {\n\t\t\timdbID,\n\t\t\tTitle,\n\t\t\tsearchWord,\n\t\t\tYear,\n\t\t\tPoster,\n\t\t\tGenre,\n\t\t\tDirector,\n\t\t\tActors,\n\t\t\tMetascore,\n\t\t\timdbRating,\n\t\t\timdbVotes,\n\t\t};\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst body = JSON.stringify(searchForm);\n\t\t\tconst res = await Axios.post(`/api/${router.query.movieId}/dict`, body, config);\n\t\t\talert(res.data);\n\t\t\tsetSearchWord('');\n\t\t} catch (err) {\n\t\t\tif (err.response) {\n\t\t\t\tsetWordErrors(err.response.data.errors[0].msg);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tconst config2 = {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t};\n\t\t\tAxios.get(`/api/${router.query.movieId}/dict`, config2).then(res => {\n\t\t\t\tsetWords(res);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error) throw error;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\t'Content-Type': 'application/json',\n\t\t};\n\t\tAxios.get(`/api/${router.query.movieId}/dict`, config).then(res => {\n\t\t\tsetWords(res);\n\t\t});\n\t\tconst config2 = {\n\t\t\t'Content-Type': 'application/json',\n\t\t};\n\t\tAxios.get(`/api/${router.query.movieId}/subtitles`, config2).then(res => {\n\t\t\t// console.log(res);\n\t\t\tsetFile(res.data);\n\t\t});\n\t}, []);\n\n\tconst handleSearch = async e => {\n\t\tif (!words.data.length) {\n\t\t\talert(`No word is added yet!`);\n\t\t} else {\n\t\t\tconst res = await Axios.get(`/api/${data.imdbID}/dict/matched`);\n\t\t\tsetMatchedWords([]);\n\t\t\tfunction filterWords(item) {\n\t\t\t\tif (res.data.data.search(item.word) === -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tsetMatchedWords(prevArray => [...prevArray, item]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet matchedWordss = words.data.filter(filterWords);\n\t\t\tconsole.log(matchedWordss);\n\t\t\t// setMatchedWords(matchedWordss);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* {console.log(words)} */}\n\t\t\t{console.log(matchedWords)}\n\t\t\t<Head>\n\t\t\t\t<title>Movies Words</title>\n\t\t\t</Head>\n\t\t\t<NavBar />\n\t\t\t<p style={{ textAlign: 'center', fontSize: '20px' }}>{data.Title}</p>\n\t\t\t<Container>\n\t\t\t\t<form\n\t\t\t\t\tmethod='POST'\n\t\t\t\t\taction={`/api/${data.imdbID}/subtitles`}\n\t\t\t\t\tenctype='multipart/form-data'\n\t\t\t\t\tstyle={{ display: 'inline', position: 'absolute' }}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{ fontSize: '17px', width: '225px' }}\n\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\tname='profile'\n\t\t\t\t\t\tplaceholder=\"Upload it's subtitles\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button style={{ fontSize: '17px' }}>Upload subtitle</button>\n\t\t\t\t</form>\n\t\t\t\t<br />\n\t\t\t\t{file ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tonClick={e => handleSearch(e)}\n\t\t\t\t\t\tstyle={{ float: 'right', position: 'relative' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t) : null}\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<form onSubmit={e => handleSubmit(e)}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={Boolean(wordErrors)}\n\t\t\t\t\t\tvalue={searchWord}\n\t\t\t\t\t\tlabel={wordErrors ? 'Error' : 'Add a word'}\n\t\t\t\t\t\thelperText={wordErrors}\n\t\t\t\t\t\tonChange={e => handleChange(e)}\n\t\t\t\t\t\tplaceholder='Enter the word'\n\t\t\t\t\t></TextField>\n\t\t\t\t</form>\n\t\t\t\t<br />\n\t\t\t\t{matchedWords.length > 0 && (\n\t\t\t\t\t<div style={{ display: 'inlineFlow' }}>\n\t\t\t\t\t\t<p style={{ textAlign: 'center', fontSize: '18px' }}>Matched words...</p>\n\t\t\t\t\t\t{matchedWords.map(each => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tborder: '2px dashed black',\n\t\t\t\t\t\t\t\t\t\tmargin: '5px 5px',\n\t\t\t\t\t\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\t\t\t\t\t\tfontStyle: 'italic',\n\t\t\t\t\t\t\t\t\t\tpadding: '10px 10px',\n\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{each.word}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<br />\n\t\t\t\t<WordResults words={words} />\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\ndictionary.getInitialProps = async ctx => {\n\tif (ctx.query.movieId) {\n\t\tconst res = await fetch(\n\t\t\t`http://www.omdbapi.com/?i=${ctx.query.movieId}&type=movie&apikey=${process.env.OmdbKey}`\n\t\t);\n\t\tconst data = await res.json();\n\t\treturn { data };\n\t}\n};\n\nexport default dictionary;\n"]},"metadata":{},"sourceType":"module"}