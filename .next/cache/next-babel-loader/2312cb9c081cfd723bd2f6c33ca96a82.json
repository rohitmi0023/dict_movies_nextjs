{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\nimport NavBar from '../components/NavBar';\nimport Fab from '@material-ui/core/Fab';\nimport { Paper } from '@material-ui/core';\n\nvar Movies = function Movies() {\n  var _ref;\n\n  var _useState = useState(''),\n      currentMovie = _useState[0],\n      setCurrentMovie = _useState[1];\n\n  var router = useRouter();\n  var movieId = router.query.movieId;\n\n  var fetchData = function fetchData() {\n    var res;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios(\"http://www.omdbapi.com/?i=\".concat(movieId, \"&type=movie&apikey=\").concat(process.env.OmdbKey)));\n\n          case 2:\n            res = _context.sent;\n            setCurrentMovie(res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var rating = currentMovie.Ratings;\n\n  if (rating) {\n    rating = rating.map(function (each) {\n      return __jsx(\"div\", {\n        key: Math.random()\n      }, __jsx(\"p\", null, each.Source, \": \", each.Value));\n    });\n  }\n\n  return __jsx(Fragment, null, console.log(currentMovie), __jsx(NavBar, null), __jsx(\"br\", null), __jsx(Fab, {\n    style: {\n      \"float\": 'right'\n    },\n    variant: \"extended\"\n  }, __jsx(Link, {\n    href: \"/[movieId]/dict\",\n    as: \"/\".concat(movieId, \"/dict\")\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none',\n      letterSpacing: '1.5px'\n    }\n  }, \"Words\"))), __jsx(\"p\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, \"Movie Description\"), console.log(currentMovie), currentMovie ? __jsx(\"div\", {\n    style: (_ref = {\n      position: 'relative',\n      clear: 'right'\n    }, _defineProperty(_ref, \"clear\", 'left'), _defineProperty(_ref, \"margin\", '70px 45px'), _ref)\n  }, __jsx(\"img\", {\n    src: currentMovie.Poster,\n    alt: \"Movie poster\",\n    style: {\n      \"float\": 'left',\n      height: '283px',\n      width: '195px'\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: '0px auto'\n    }\n  }, __jsx(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '27px',\n      fontStyle: 'italic',\n      marginBottom: '10px !important'\n    }\n  }, currentMovie.Title), __jsx(\"span\", {\n    style: {\n      fontSize: '14px'\n    }\n  }, currentMovie.Plot), __jsx(\"br\", null), __jsx(Paper, {\n    elevation: 3,\n    style: {\n      marginTop: '10px'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: '213px',\n      padding: '15px 15px'\n    }\n  }, __jsx(\"span\", {\n    style: {\n      fontStyle: 'bold'\n    }\n  }, __jsx(\"b\", null, \"Released on :\"), \" \", currentMovie.Released), __jsx(\"br\", null), __jsx(\"span\", {\n    style: {\n      fontStyle: 'bold'\n    }\n  }, __jsx(\"b\", null, \"Directed by: \"), currentMovie.Director), __jsx(\"br\", null), __jsx(\"span\", {\n    style: {\n      fontStyle: 'bold'\n    }\n  }, __jsx(\"b\", null, \"Genre:\"), \" \", currentMovie.Genre), __jsx(\"br\", null), __jsx(\"span\", {\n    style: {\n      fontStyle: 'bold'\n    }\n  }, __jsx(\"b\", null, \"Cast :\"), \" \", currentMovie.Actors))))) : __jsx(\"p\", null, \"Loading...\"));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/[movieId].js"],"names":["axios","useRouter","useEffect","useState","Fragment","Link","NavBar","Fab","Paper","Movies","currentMovie","setCurrentMovie","router","movieId","query","fetchData","process","env","OmdbKey","res","data","rating","Ratings","map","each","Math","random","Source","Value","console","log","textDecoration","letterSpacing","textAlign","position","clear","Poster","height","width","margin","fontSize","fontStyle","marginBottom","Title","Plot","marginTop","marginLeft","padding","Released","Director","Genre","Actors"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\nimport NavBar from '../components/NavBar';\nimport Fab from '@material-ui/core/Fab';\nimport { Paper } from '@material-ui/core';\n\nconst Movies = () => {\n\tconst [currentMovie, setCurrentMovie] = useState('');\n\tconst router = useRouter();\n\tconst { movieId } = router.query;\n\tconst fetchData = async () => {\n\t\tconst res = await axios(\n\t\t\t`http://www.omdbapi.com/?i=${movieId}&type=movie&apikey=${process.env.OmdbKey}`\n\t\t);\n\t\tsetCurrentMovie(res.data);\n\t};\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\tlet rating = currentMovie.Ratings;\n\tif (rating) {\n\t\trating = rating.map(each => {\n\t\t\treturn (\n\t\t\t\t<div key={Math.random()}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{each.Source}: {each.Value}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t{console.log(currentMovie)}\n\t\t\t<NavBar />\n\t\t\t<br />\n\t\t\t<Fab style={{ float: 'right' }} variant='extended'>\n\t\t\t\t<Link href='/[movieId]/dict' as={`/${movieId}/dict`}>\n\t\t\t\t\t<a style={{ textDecoration: 'none', letterSpacing: '1.5px' }}>Words</a>\n\t\t\t\t</Link>\n\t\t\t</Fab>\n\t\t\t<p style={{ textAlign: 'center' }}>Movie Description</p>\n\t\t\t{console.log(currentMovie)}\n\t\t\t{currentMovie ? (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tclear: 'right',\n\t\t\t\t\t\tclear: 'left',\n\t\t\t\t\t\tmargin: '70px 45px',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={currentMovie.Poster}\n\t\t\t\t\t\talt='Movie poster'\n\t\t\t\t\t\tstyle={{ float: 'left', height: '283px', width: '195px' }}\n\t\t\t\t\t></img>\n\t\t\t\t\t<div style={{ margin: '0px auto' }}>\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\tfontSize: '27px',\n\t\t\t\t\t\t\t\tfontStyle: 'italic',\n\t\t\t\t\t\t\t\tmarginBottom: '10px !important',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{currentMovie.Title}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<span style={{ fontSize: '14px' }}>{currentMovie.Plot}</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Paper elevation={3} style={{ marginTop: '10px' }}>\n\t\t\t\t\t\t\t<div style={{ marginLeft: '213px', padding: '15px 15px' }}>\n\t\t\t\t\t\t\t\t<span style={{ fontStyle: 'bold' }}>\n\t\t\t\t\t\t\t\t\t<b>Released on :</b> {currentMovie.Released}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span style={{ fontStyle: 'bold' }}>\n\t\t\t\t\t\t\t\t\t<b>Directed by: </b>\n\t\t\t\t\t\t\t\t\t{currentMovie.Director}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span style={{ fontStyle: 'bold' }}>\n\t\t\t\t\t\t\t\t\t<b>Genre:</b> {currentMovie.Genre}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span style={{ fontStyle: 'bold' }}>\n\t\t\t\t\t\t\t\t\t<b>Cast :</b> {currentMovie.Actors}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* <span>{rating}</span> */}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}