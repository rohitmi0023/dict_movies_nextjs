{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport WordResults from '../../components/WordResults';\nimport NavBar from '../../components/NavBar';\nimport { Container, Button, TextField } from '@material-ui/core';\n\nvar dictionary = function dictionary(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(''),\n      searchWord = _useState[0],\n      setSearchWord = _useState[1];\n\n  var _useState2 = useState([]),\n      words = _useState2[0],\n      setWords = _useState2[1];\n\n  var _useState3 = useState([]),\n      matchedWords = _useState3[0],\n      setMatchedWords = _useState3[1];\n\n  var _useState4 = useState(),\n      wordErrors = _useState4[0],\n      setWordErrors = _useState4[1];\n\n  var handleChange = function handleChange(e) {\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setWordErrors('');\n            setSearchWord(e.target.value);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var router = useRouter();\n  var imdbID = data.imdbID,\n      Title = data.Title,\n      Year = data.Year,\n      Poster = data.Poster,\n      Genre = data.Genre,\n      Director = data.Director,\n      Actors = data.Actors,\n      Metascore = data.Metascore,\n      imdbRating = data.imdbRating,\n      imdbVotes = data.imdbVotes;\n\n  var handleSubmit = function handleSubmit(e) {\n    var searchForm, config, body, res, config2;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            searchForm = {\n              imdbID: imdbID,\n              Title: Title,\n              searchWord: searchWord,\n              Year: Year,\n              Poster: Poster,\n              Genre: Genre,\n              Director: Director,\n              Actors: Actors,\n              Metascore: Metascore,\n              imdbRating: imdbRating,\n              imdbVotes: imdbVotes\n            };\n            _context2.prev = 2;\n            config = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            body = JSON.stringify(searchForm);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(Axios.post(\"/api/\".concat(router.query.movieId, \"/dict\"), body, config));\n\n          case 7:\n            res = _context2.sent;\n            setSearchWord('');\n            _context2.next = 17;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(\"Inside catch of post word request\");\n            console.log(_context2.t0.errors); // setWordErrors(res.data.errors[0].msg);\n            // console.log(err.message);\n\n            if (!_context2.t0) {\n              _context2.next = 17;\n              break;\n            }\n\n            throw _context2.t0;\n\n          case 17:\n            _context2.prev = 17;\n            config2 = {\n              'Content-Type': 'application/json'\n            };\n            Axios.get(\"/api/\".concat(router.query.movieId, \"/dict\"), config2).then(function (res) {\n              setWords(res);\n            });\n            _context2.next = 26;\n            break;\n\n          case 22:\n            _context2.prev = 22;\n            _context2.t1 = _context2[\"catch\"](17);\n\n            if (!_context2.t1) {\n              _context2.next = 26;\n              break;\n            }\n\n            throw _context2.t1;\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 11], [17, 22]], Promise);\n  };\n\n  useEffect(function () {\n    var config = {\n      'Content-Type': 'application/json'\n    };\n    Axios.get(\"/api/\".concat(router.query.movieId, \"/dict\"), config).then(function (res) {\n      setWords(res);\n    });\n  }, []);\n\n  var handleSearch = function handleSearch(e) {\n    var res;\n    return _regeneratorRuntime.async(function handleSearch$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (words.data.length) {\n              _context3.next = 4;\n              break;\n            }\n\n            alert(\"No word is added yet!\");\n            _context3.next = 8;\n            break;\n\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(Axios.get(\"/api/\".concat(data.imdbID, \"/dict/matched\")));\n\n          case 6:\n            res = _context3.sent;\n\n            if (res.data === 'No subtitles found') {\n              alert('No subtitles was found!!!');\n            } else {\n              words.data.map(function (each) {\n                var result = res.data.data.search(each.word);\n\n                if (result !== -1 && matchedWords.indexOf(each.word) === -1) {\n                  setMatchedWords(function (oldArray) {\n                    return [].concat(_toConsumableArray(oldArray), [each.word]);\n                  });\n                }\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", null, console.log(wordErrors), __jsx(Head, null, __jsx(\"title\", null, \"Movies Words\")), __jsx(NavBar, null), __jsx(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '20px'\n    }\n  }, data.Title), __jsx(Container, null, __jsx(\"form\", {\n    method: \"POST\",\n    action: \"/api/\".concat(data.imdbID, \"/subtitles\"),\n    enctype: \"multipart/form-data\"\n  }, __jsx(\"input\", {\n    style: {\n      fontSize: '17px',\n      width: '225px'\n    },\n    type: \"file\",\n    name: \"profile\",\n    placeholder: \"Upload it's subtitles\"\n  }), __jsx(\"button\", {\n    style: {\n      fontSize: '17px'\n    }\n  }, \"Upload\")), __jsx(\"br\", null), __jsx(Button, {\n    variant: \"contained\",\n    onClick: function onClick(e) {\n      return handleSearch(e);\n    }\n  }, \"Search\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    }\n  }, __jsx(TextField, {\n    error: Boolean(wordErrors),\n    value: searchWord,\n    label: wordErrors ? 'Error' : 'Add a word',\n    helperText: wordErrors,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    placeholder: \"Enter the word\"\n  })), __jsx(\"br\", null), matchedWords.length > 0 && __jsx(\"div\", null, matchedWords), __jsx(\"br\", null), __jsx(WordResults, {\n    words: words\n  })));\n};\n\ndictionary.getInitialProps = function _callee(ctx) {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!ctx.query.movieId) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?i=\".concat(ctx.query.movieId, \"&type=movie&apikey=\").concat(process.env.OmdbKey)));\n\n        case 3:\n          res = _context4.sent;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default dictionary;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/[movieId]/dict.js"],"names":["React","Fragment","useState","useEffect","Head","Axios","fetch","useRouter","WordResults","NavBar","Container","Button","TextField","dictionary","data","searchWord","setSearchWord","words","setWords","matchedWords","setMatchedWords","wordErrors","setWordErrors","handleChange","e","target","value","router","imdbID","Title","Year","Poster","Genre","Director","Actors","Metascore","imdbRating","imdbVotes","handleSubmit","preventDefault","searchForm","config","headers","body","JSON","stringify","post","query","movieId","res","console","log","errors","config2","get","then","handleSearch","length","alert","map","each","result","search","word","indexOf","oldArray","textAlign","fontSize","width","Boolean","getInitialProps","ctx","process","env","OmdbKey","json"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport WordResults from '../../components/WordResults';\nimport NavBar from '../../components/NavBar';\nimport { Container, Button, TextField } from '@material-ui/core';\n\nconst dictionary = ({ data }) => {\n\tconst [searchWord, setSearchWord] = useState('');\n\tconst [words, setWords] = useState([]);\n\tconst [matchedWords, setMatchedWords] = useState([]);\n\tconst [wordErrors, setWordErrors] = useState();\n\n\tconst handleChange = async e => {\n\t\tsetWordErrors('');\n\t\tsetSearchWord(e.target.value);\n\t};\n\tconst router = useRouter();\n\tconst {\n\t\timdbID,\n\t\tTitle,\n\t\tYear,\n\t\tPoster,\n\t\tGenre,\n\t\tDirector,\n\t\tActors,\n\t\tMetascore,\n\t\timdbRating,\n\t\timdbVotes,\n\t} = data;\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst searchForm = {\n\t\t\timdbID,\n\t\t\tTitle,\n\t\t\tsearchWord,\n\t\t\tYear,\n\t\t\tPoster,\n\t\t\tGenre,\n\t\t\tDirector,\n\t\t\tActors,\n\t\t\tMetascore,\n\t\t\timdbRating,\n\t\t\timdbVotes,\n\t\t};\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst body = JSON.stringify(searchForm);\n\t\t\tconst res = await Axios.post(`/api/${router.query.movieId}/dict`, body, config);\n\t\t\tsetSearchWord('');\n\t\t} catch (err) {\n\t\t\tconsole.log(`Inside catch of post word request`);\n\t\t\tconsole.log(err.errors);\n\t\t\t// setWordErrors(res.data.errors[0].msg);\n\t\t\t// console.log(err.message);\n\t\t\tif (err) throw err;\n\t\t}\n\t\ttry {\n\t\t\tconst config2 = {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t};\n\t\t\tAxios.get(`/api/${router.query.movieId}/dict`, config2).then(res => {\n\t\t\t\tsetWords(res);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error) throw error;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\t'Content-Type': 'application/json',\n\t\t};\n\t\tAxios.get(`/api/${router.query.movieId}/dict`, config).then(res => {\n\t\t\tsetWords(res);\n\t\t});\n\t}, []);\n\n\tconst handleSearch = async e => {\n\t\tif (!words.data.length) {\n\t\t\talert(`No word is added yet!`);\n\t\t} else {\n\t\t\tconst res = await Axios.get(`/api/${data.imdbID}/dict/matched`);\n\t\t\tif (res.data === 'No subtitles found') {\n\t\t\t\talert('No subtitles was found!!!');\n\t\t\t} else {\n\t\t\t\twords.data.map(each => {\n\t\t\t\t\tlet result = res.data.data.search(each.word);\n\t\t\t\t\tif (result !== -1 && matchedWords.indexOf(each.word) === -1) {\n\t\t\t\t\t\tsetMatchedWords(oldArray => [...oldArray, each.word]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{console.log(wordErrors)}\n\t\t\t<Head>\n\t\t\t\t<title>Movies Words</title>\n\t\t\t</Head>\n\t\t\t<NavBar />\n\t\t\t<p style={{ textAlign: 'center', fontSize: '20px' }}>{data.Title}</p>\n\t\t\t<Container>\n\t\t\t\t<form\n\t\t\t\t\tmethod='POST'\n\t\t\t\t\taction={`/api/${data.imdbID}/subtitles`}\n\t\t\t\t\tenctype='multipart/form-data'\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{ fontSize: '17px', width: '225px' }}\n\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\tname='profile'\n\t\t\t\t\t\tplaceholder=\"Upload it's subtitles\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button style={{ fontSize: '17px' }}>Upload</button>\n\t\t\t\t</form>\n\t\t\t\t<br />\n\t\t\t\t<Button variant='contained' onClick={e => handleSearch(e)}>\n\t\t\t\t\tSearch\n\t\t\t\t</Button>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<form onSubmit={e => handleSubmit(e)}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={Boolean(wordErrors)}\n\t\t\t\t\t\tvalue={searchWord}\n\t\t\t\t\t\tlabel={wordErrors ? 'Error' : 'Add a word'}\n\t\t\t\t\t\thelperText={wordErrors}\n\t\t\t\t\t\tonChange={e => handleChange(e)}\n\t\t\t\t\t\tplaceholder='Enter the word'\n\t\t\t\t\t></TextField>\n\t\t\t\t</form>\n\t\t\t\t<br />\n\t\t\t\t{matchedWords.length > 0 && <div>{matchedWords}</div>}\n\t\t\t\t<br />\n\t\t\t\t<WordResults words={words} />\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\ndictionary.getInitialProps = async ctx => {\n\tif (ctx.query.movieId) {\n\t\tconst res = await fetch(\n\t\t\t`http://www.omdbapi.com/?i=${ctx.query.movieId}&type=movie&apikey=${process.env.OmdbKey}`\n\t\t);\n\t\tconst data = await res.json();\n\t\treturn { data };\n\t}\n};\n\nexport default dictionary;\n"]},"metadata":{},"sourceType":"module"}