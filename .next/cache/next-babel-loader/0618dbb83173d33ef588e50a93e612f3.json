{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, Children } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nvar WordResults = function WordResults(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      words = _useState[0],\n      setWords = _useState[1];\n\n  var router = useRouter();\n  var wordList = [];\n  useEffect(function () {\n    var config = {\n      'Content-Type': 'application/json'\n    };\n    Axios.get(\"/api/\".concat(router.query.movieId, \"/dict\"), config).then(function (res) {\n      console.log(res);\n      setWords(res.data);\n    });\n  }, []);\n\n  if (words.length) {\n    // console.log(words);\n    wordList = words.map(function (each) {\n      return __jsx(\"div\", {\n        key: each.id\n      }, __jsx(\"span\", null, each.word)); // console.log(each.word);\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"p\", null, data.Title, \" Dictionary...\"), console.log(wordList.length), wordList.length ? __jsx(\"p\", null, \"Fetching the lists...\") : __jsx(\"p\", null, \"Nothing found!!!\"), wordList);\n};\n\nexport default WordResults;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/WordResults.js"],"names":["React","useState","useEffect","Children","Axios","useRouter","WordResults","data","words","setWords","router","wordList","config","get","query","movieId","then","res","console","log","length","map","each","id","word","Title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACPN,QAAQ,CAAC,EAAD,CADD;AAAA,MAC1BO,KAD0B;AAAA,MACnBC,QADmB;;AAEjC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAIM,QAAQ,GAAG,EAAf;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMU,MAAM,GAAG;AACd,sBAAgB;AADF,KAAf;AAGAR,IAAAA,KAAK,CAACS,GAAN,gBAAkBH,MAAM,CAACI,KAAP,CAAaC,OAA/B,YAA+CH,MAA/C,EAAuDI,IAAvD,CAA4D,UAAAC,GAAG,EAAI;AAClEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAR,MAAAA,QAAQ,CAACQ,GAAG,CAACV,IAAL,CAAR;AACA,KAHD;AAIA,GARQ,EAQN,EARM,CAAT;;AASA,MAAIC,KAAK,CAACY,MAAV,EAAkB;AACjB;AACAT,IAAAA,QAAQ,GAAGH,KAAK,CAACa,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC5B,aACC;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC;AAAf,SACC,oBAAOD,IAAI,CAACE,IAAZ,CADD,CADD,CAD4B,CAM5B;AACA,KAPU,CAAX;AAQA;;AAED,SACC,mBACC,iBAAIjB,IAAI,CAACkB,KAAT,mBADD,EAGEP,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,MAArB,CAHF,EAIET,QAAQ,CAACS,MAAT,GAAkB,yCAAlB,GAAiD,oCAJnD,EAKET,QALF,CADD;AASA,CAnCD;;AAqCA,eAAeL,WAAf","sourcesContent":["import React, { useState, useEffect, Children } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nconst WordResults = ({ data }) => {\n\tconst [words, setWords] = useState([]);\n\tconst router = useRouter();\n\tlet wordList = [];\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\t'Content-Type': 'application/json',\n\t\t};\n\t\tAxios.get(`/api/${router.query.movieId}/dict`, config).then(res => {\n\t\t\tconsole.log(res);\n\t\t\tsetWords(res.data);\n\t\t});\n\t}, []);\n\tif (words.length) {\n\t\t// console.log(words);\n\t\twordList = words.map(each => {\n\t\t\treturn (\n\t\t\t\t<div key={each.id}>\n\t\t\t\t\t<span>{each.word}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t\t// console.log(each.word);\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<p>{data.Title} Dictionary...</p>\n\t\t\t{/* {console.log(wordList)} */}\n\t\t\t{console.log(wordList.length)}\n\t\t\t{wordList.length ? <p>Fetching the lists...</p> : <p>Nothing found!!!</p>}\n\t\t\t{wordList}\n\t\t</div>\n\t);\n};\n\nexport default WordResults;\n"]},"metadata":{},"sourceType":"module"}