{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Router from 'next/router';\n\nvar SearchResult = function SearchResult(_ref) {\n  var searchresult = _ref.searchresult;\n\n  var _useState = useState(''),\n      movie = _useState[0],\n      setMovie = _useState[1];\n\n  var _useContext = useContext(''),\n      currentMovie = _useContext[0],\n      setCurrentMovie = _useContext[1];\n\n  var moviesList = [];\n  var movies = searchresult.data.Search;\n\n  var handleClick = function handleClick(Id) {\n    var res;\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios(\"http://www.omdbapi.com/?i=\".concat(movieId, \"&type=movie&apikey=\").concat(process.env.OmdbKey)));\n\n          case 2:\n            res = _context.sent;\n            setCurrentMovie(res.data);\n            setMovie(Id);\n            Router.push(\"/movies/[movieId]\", \"/movies/\".concat(Id));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (movies) {\n    moviesList = movies.map(function (movie) {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return handleClick(movie.imdbID);\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  } else {\n    moviesList.push(searchresult.data);\n    moviesList = moviesList.map(function (movie) {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return handleClick(movie.imdbID);\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"p\", null, \"Search Results...\"), moviesList);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/SearchResult.js"],"names":["React","useState","useContext","Router","SearchResult","searchresult","movie","setMovie","currentMovie","setCurrentMovie","moviesList","movies","data","Search","handleClick","Id","axios","movieId","process","env","OmdbKey","res","push","map","imdbID","Poster","Title","Year"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBAChBJ,QAAQ,CAAC,EAAD,CADQ;AAAA,MACnCK,KADmC;AAAA,MAC5BC,QAD4B;;AAAA,oBAEFL,UAAU,CAAC,EAAD,CAFR;AAAA,MAEnCM,YAFmC;AAAA,MAErBC,eAFqB;;AAG1C,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAMC,MAAM,GAAGN,YAAY,CAACO,IAAb,CAAkBC,MAAjC;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACDC,KAAK,qCACOC,OADP,gCACoCC,OAAO,CAACC,GAAR,CAAYC,OADhD,EADJ;;AAAA;AACbC,YAAAA,GADa;AAInBZ,YAAAA,eAAe,CAACY,GAAG,CAACT,IAAL,CAAf;AACAL,YAAAA,QAAQ,CAACQ,EAAD,CAAR;AACAZ,YAAAA,MAAM,CAACmB,IAAP,wCAA4CP,EAA5C;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AASA,MAAIJ,MAAJ,EAAY;AACXD,IAAAA,UAAU,GAAGC,MAAM,CAACY,GAAP,CAAW,UAAAjB,KAAK,EAAI;AAChC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACkB,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SAEC;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAMV,WAAW,CAACR,KAAK,CAACkB,MAAP,CAAjB;AAAA;AAAZ,SACC;AAAK,QAAA,GAAG,EAAElB,KAAK,CAACmB,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEnB,KAAK,CAACoB,KADR,QACiBpB,KAAK,CAACqB,IADvB,MAFD,CAFD,CADD;AAYA,KAbY,CAAb;AAcA,GAfD,MAeO;AACNjB,IAAAA,UAAU,CAACY,IAAX,CAAgBjB,YAAY,CAACO,IAA7B;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACa,GAAX,CAAe,UAAAjB,KAAK,EAAI;AACpC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACkB,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SACC;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAMV,WAAW,CAACR,KAAK,CAACkB,MAAP,CAAjB;AAAA;AAAZ,SACC;AAAK,QAAA,GAAG,EAAElB,KAAK,CAACmB,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEnB,KAAK,CAACoB,KADR,QACiBpB,KAAK,CAACqB,IADvB,MAFD,CADD,CADD;AAUA,KAXY,CAAb;AAYA;;AACD,SACC,mBACC,qCADD,EAEEjB,UAFF,CADD;AAMA,CAnDD;;AAqDA,eAAeN,YAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Router from 'next/router';\n\nconst SearchResult = ({ searchresult }) => {\n\tconst [movie, setMovie] = useState('');\n\tconst [currentMovie, setCurrentMovie] = useContext('');\n\tlet moviesList = [];\n\tconst movies = searchresult.data.Search;\n\n\tconst handleClick = async Id => {\n\t\tconst res = await axios(\n\t\t\t`http://www.omdbapi.com/?i=${movieId}&type=movie&apikey=${process.env.OmdbKey}`\n\t\t);\n\t\tsetCurrentMovie(res.data);\n\t\tsetMovie(Id);\n\t\tRouter.push(`/movies/[movieId]`, `/movies/${Id}`);\n\t};\n\n\tif (movies) {\n\t\tmoviesList = movies.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t{/* <Link href=\"/movies/[movieId]\" as={`/movies/${movieId}`} > */}\n\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t\t{/* </Link > */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t} else {\n\t\tmoviesList.push(searchresult.data);\n\t\tmoviesList = moviesList.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<p>Search Results...</p>\n\t\t\t{moviesList}\n\t\t</div>\n\t);\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}