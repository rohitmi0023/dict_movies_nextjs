{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nvar WordResults = function WordResults(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      words = _useState[0],\n      setWords = _useState[1];\n\n  var fetchWords = function fetchWords() {\n    var res;\n    return _regeneratorRuntime.async(function fetchWords$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Axios.get(\"/movies/\".concat(router.query.movieId, \"/dict\")));\n\n          case 2:\n            res = _context.sent;\n            console.log(res);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchWords();\n  }, []);\n  return __jsx(\"div\", null, data.Title, \" Dictionary...\");\n};\n\nexport default WordResults;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/WordResults.js"],"names":["React","useState","WordResults","data","words","setWords","fetchWords","Axios","get","router","query","movieId","res","console","log","useEffect","Title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACPF,QAAQ,CAAC,EAAD,CADD;AAAA,MAC1BG,KAD0B;AAAA,MACnBC,QADmB;;AAGjC,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAC,KAAK,CAACC,GAAN,mBAAqBC,MAAM,CAACC,KAAP,CAAaC,OAAlC,WADA;;AAAA;AACZC,YAAAA,GADY;AAElBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAKAG,EAAAA,SAAS,CAAC,YAAM;AACfT,IAAAA,UAAU;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,mBAAMH,IAAI,CAACa,KAAX,mBAAP;AACA,CAbD;;AAeA,eAAed,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst WordResults = ({ data }) => {\n\tconst [words, setWords] = useState([]);\n\n\tconst fetchWords = async () => {\n\t\tconst res = await Axios.get(`/movies/${router.query.movieId}/dict`);\n\t\tconsole.log(res);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchWords();\n\t}, []);\n\n\treturn <div>{data.Title} Dictionary...</div>;\n};\n\nexport default WordResults;\n"]},"metadata":{},"sourceType":"module"}