{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nvar WordResults = function WordResults(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      words = _useState[0],\n      setWords = _useState[1];\n\n  var router = useRouter();\n\n  var fetchWords = function fetchWords() {\n    var config, res;\n    return _regeneratorRuntime.async(function fetchWords$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // const body = data.movieId;\n            config = {\n              'Content-Type': 'application/json'\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Axios.get(\"/api/\".concat(router.query.movieId, \"/dict\"), config));\n\n          case 3:\n            res = _context.sent;\n            setWords(res);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchWords();\n  }, []);\n  return __jsx(\"div\", null, __jsx(\"p\", null, data.Title, \" Dictionary...\"), \" \", console.log(words));\n};\n\nexport default WordResults;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/WordResults.js"],"names":["React","useState","useEffect","Axios","useRouter","WordResults","data","words","setWords","router","fetchWords","config","get","query","movieId","res","Title","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACPL,QAAQ,CAAC,EAAD,CADD;AAAA,MAC1BM,KAD0B;AAAA,MACnBC,QADmB;;AAEjC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAEA,MAAMM,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB;AACMC,YAAAA,MAFY,GAEH;AACd,8BAAgB;AADF,aAFG;AAAA;AAAA,6CAKAR,KAAK,CAACS,GAAN,gBAAkBH,MAAM,CAACI,KAAP,CAAaC,OAA/B,YAA+CH,MAA/C,CALA;;AAAA;AAKZI,YAAAA,GALY;AAMlBP,YAAAA,QAAQ,CAACO,GAAD,CAAR;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AASAb,EAAAA,SAAS,CAAC,YAAM;AACfQ,IAAAA,UAAU;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SACC,mBACC,iBAAIJ,IAAI,CAACU,KAAT,mBADD,OACoCC,OAAO,CAACC,GAAR,CAAYX,KAAZ,CADpC,CADD;AAKA,CAtBD;;AAwBA,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nconst WordResults = ({ data }) => {\n\tconst [words, setWords] = useState([]);\n\tconst router = useRouter();\n\n\tconst fetchWords = async () => {\n\t\t// const body = data.movieId;\n\t\tconst config = {\n\t\t\t'Content-Type': 'application/json',\n\t\t};\n\t\tconst res = await Axios.get(`/api/${router.query.movieId}/dict`, config);\n\t\tsetWords(res);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchWords();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>{data.Title} Dictionary...</p> {console.log(words)}\n\t\t</div>\n\t);\n};\n\nexport default WordResults;\n"]},"metadata":{},"sourceType":"module"}