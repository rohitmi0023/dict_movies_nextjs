{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useState } from 'react';\nimport Axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport WordResults from '../../components/WordResults';\n\nvar dictionary = function dictionary(_ref) {\n  var data = _ref.data;\n  // const [searchWord, setSearchWord] = useState('');\n  // const handleChange = async e => {\n  // \tsetSearchWord(e.target.value);\n  // };\n  var router = useRouter();\n  console.log(\"Down here in dict\");\n  console.log(router); // const {\n  // \timdbID,\n  // \tTitle,\n  // \tYear,\n  // \tPoster,\n  // \tGenre,\n  // \tDirector,\n  // \tActors,\n  // \tMetascore,\n  // \timdbRating,\n  // \timdbVotes,\n  // } = data;\n  // const handleSubmit = async e => {\n  // \te.preventDefault();\n  // \tconst searchForm = {\n  // \t\timdbID,\n  // \t\tTitle,\n  // \t\tsearchWord,\n  // \t\tYear,\n  // \t\tPoster,\n  // \t\tGenre,\n  // \t\tDirector,\n  // \t\tActors,\n  // \t\tMetascore,\n  // \t\timdbRating,\n  // \t\timdbVotes,\n  // \t};\n  // \tconst config = {\n  // \t\theaders: {\n  // \t\t\t'Content-Type': 'application/json',\n  // \t\t},\n  // \t};\n  // \tconst body = JSON.stringify(searchForm);\n  // \tconst res = await Axios.post(`/${router.query.movieId}/dict`, body, config);\n  // \tsetSearchWord('');\n  // \tconsole.log(res);\n  // };\n\n  return __jsx(Fragment, null);\n}; // dictionary.getInitialProps = async ctx => {\n// \tif (ctx.query.movieId) {\n// \t\tconst res = await fetch(\n// \t\t\t`http://www.omdbapi.com/?i=${ctx.query.movieId}&type=movie&apikey=${process.env.OmdbKey}`\n// \t\t);\n// \t\tconst data = await res.json();\n// \t\treturn { data };\n// \t}\n// };\n\n\nexport default dictionary;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/[movieId]/dict.js"],"names":["React","Fragment","useState","Axios","fetch","useRouter","WordResults","dictionary","data","router","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChC;AAEA;AACA;AACA;AACA,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACAK,EAAAA,OAAO,CAACC,GAAR;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EARgC,CAShC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACC,MAAC,QAAD,OADD;AAUA,CA1DD,C,CA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport WordResults from '../../components/WordResults';\n\nconst dictionary = ({ data }) => {\n\t// const [searchWord, setSearchWord] = useState('');\n\n\t// const handleChange = async e => {\n\t// \tsetSearchWord(e.target.value);\n\t// };\n\tconst router = useRouter();\n\tconsole.log(`Down here in dict`);\n\tconsole.log(router);\n\t// const {\n\t// \timdbID,\n\t// \tTitle,\n\t// \tYear,\n\t// \tPoster,\n\t// \tGenre,\n\t// \tDirector,\n\t// \tActors,\n\t// \tMetascore,\n\t// \timdbRating,\n\t// \timdbVotes,\n\t// } = data;\n\n\t// const handleSubmit = async e => {\n\t// \te.preventDefault();\n\t// \tconst searchForm = {\n\t// \t\timdbID,\n\t// \t\tTitle,\n\t// \t\tsearchWord,\n\t// \t\tYear,\n\t// \t\tPoster,\n\t// \t\tGenre,\n\t// \t\tDirector,\n\t// \t\tActors,\n\t// \t\tMetascore,\n\t// \t\timdbRating,\n\t// \t\timdbVotes,\n\t// \t};\n\t// \tconst config = {\n\t// \t\theaders: {\n\t// \t\t\t'Content-Type': 'application/json',\n\t// \t\t},\n\t// \t};\n\t// \tconst body = JSON.stringify(searchForm);\n\t// \tconst res = await Axios.post(`/${router.query.movieId}/dict`, body, config);\n\t// \tsetSearchWord('');\n\t// \tconsole.log(res);\n\t// };\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{/* <p>Movie Title: {data.Title}</p>\n\t\t\t<form onSubmit={e => handleSubmit(e)}>\n\t\t\t\t<label>Search</label>\n\t\t\t\t<input type='text' value={searchWord} onChange={e => handleChange(e)}></input>\n\t\t\t</form>\n\t\t\t<WordResults data={data} /> */}\n\t\t</Fragment>\n\t);\n};\n\n// dictionary.getInitialProps = async ctx => {\n// \tif (ctx.query.movieId) {\n// \t\tconst res = await fetch(\n// \t\t\t`http://www.omdbapi.com/?i=${ctx.query.movieId}&type=movie&apikey=${process.env.OmdbKey}`\n// \t\t);\n// \t\tconst data = await res.json();\n// \t\treturn { data };\n// \t}\n// };\n\nexport default dictionary;\n"]},"metadata":{},"sourceType":"module"}