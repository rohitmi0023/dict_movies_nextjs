{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\n\nconst SearchResult = ({\n  searchresult\n}) => {\n  const {\n    0: currentMovie,\n    1: setCurrentMovie\n  } = useState('');\n  let moviesList = [];\n  const movies = searchresult.data.Search;\n\n  const handleClick = Id => {\n    setCurrentMovie(Id);\n    Router.push(`/movies/[movieId]`, `/movies/${Id}`);\n  };\n\n  if (movies) {\n    moviesList = movies.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID)\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  } else {\n    moviesList.push(searchresult.data);\n    moviesList = moviesList.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID)\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"p\", null, \"Search Results...\"), moviesList);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/SearchResult.js"],"names":["React","useState","Router","SearchResult","searchresult","currentMovie","setCurrentMovie","moviesList","movies","data","Search","handleClick","Id","push","map","movie","imdbID","Poster","Title","Year"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAC1C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,MAAIM,UAAU,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAGJ,YAAY,CAACK,IAAb,CAAkBC,MAAjC;;AAEA,QAAMC,WAAW,GAAGC,EAAE,IAAI;AACzBN,IAAAA,eAAe,CAACM,EAAD,CAAf;AACAV,IAAAA,MAAM,CAACW,IAAP,CAAa,mBAAb,EAAkC,WAAUD,EAAG,EAA/C;AACA,GAHD;;AAKA,MAAIJ,MAAJ,EAAY;AACXD,IAAAA,UAAU,GAAGC,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAI;AAChC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SAEC;AAAG,QAAA,OAAO,EAAE,MAAML,WAAW,CAACI,KAAK,CAACC,MAAP;AAA7B,SACC;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEF,KAAK,CAACG,KADR,QACiBH,KAAK,CAACI,IADvB,MAFD,CAFD,CADD;AAYA,KAbY,CAAb;AAcA,GAfD,MAeO;AACNZ,IAAAA,UAAU,CAACM,IAAX,CAAgBT,YAAY,CAACK,IAA7B;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAeC,KAAK,IAAI;AACpC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SACC;AAAG,QAAA,OAAO,EAAE,MAAML,WAAW,CAACI,KAAK,CAACC,MAAP;AAA7B,SACC;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEF,KAAK,CAACG,KADR,QACiBH,KAAK,CAACI,IADvB,MAFD,CADD,CADD;AAUA,KAXY,CAAb;AAYA;;AACD,SACC,mBACC,qCADD,EAEEZ,UAFF,CADD;AAMA,CA9CD;;AAgDA,eAAeJ,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport Router from 'next/router';\n\nconst SearchResult = ({ searchresult }) => {\n\tconst [currentMovie, setCurrentMovie] = useState('');\n\tlet moviesList = [];\n\tconst movies = searchresult.data.Search;\n\n\tconst handleClick = Id => {\n\t\tsetCurrentMovie(Id);\n\t\tRouter.push(`/movies/[movieId]`, `/movies/${Id}`);\n\t};\n\n\tif (movies) {\n\t\tmoviesList = movies.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t{/* <Link href=\"/movies/[movieId]\" as={`/movies/${movieId}`} > */}\n\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t\t{/* </Link > */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t} else {\n\t\tmoviesList.push(searchresult.data);\n\t\tmoviesList = moviesList.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<p>Search Results...</p>\n\t\t\t{moviesList}\n\t\t</div>\n\t);\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}