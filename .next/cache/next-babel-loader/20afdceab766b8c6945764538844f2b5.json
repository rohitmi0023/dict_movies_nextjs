{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Axios from 'axios';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst WordResults = ({\n  words\n}) => {\n  const handleClick = async (word_id, vote) => {\n    const value = localStorage.getItem('user');\n\n    if (value) {\n      localStorage.clear();\n      const word_id_var = {\n        word_id: `${word_id}`,\n        vote: `${vote}`\n      };\n      const body = JSON.stringify(word_id_var);\n      console.log(body);\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await Axios.post(`/api/:id/dict/${word_id}`, body, config);\n      alert(res.data);\n    } else {\n      alert('You can vote just once per session!!!');\n    }\n  };\n\n  let wordList;\n\n  if (words.data) {\n    wordList = words.data.map(each => {\n      return __jsx(\"div\", {\n        key: each.id,\n        style: {\n          border: '2px dashed black',\n          margin: '5px 5px',\n          fontWeight: '500',\n          fontStyle: 'italic',\n          padding: '10px 10px',\n          display: 'inline-block'\n        }\n      }, each.word, \" \", '   ', __jsx(ThumbUpIcon, {\n        onClick: () => handleClick(each.id, +1)\n      }), \" \", '  ', \" \", each.upvotes, ' ', __jsx(ThumbDownIcon, {\n        onClick: () => handleClick(each.id, -1)\n      }), ' ');\n    });\n  }\n\n  return __jsx(\"div\", null, words.length + 1 ? __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(CircularProgress, null)) : words.data.length ? __jsx(\"div\", {\n    style: {\n      display: 'inlineFlow'\n    }\n  }, wordList) : __jsx(\"p\", null, \"Nothing Found\"));\n};\n\nexport default WordResults;","map":null,"metadata":{},"sourceType":"module"}