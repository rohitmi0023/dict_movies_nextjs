{"ast":null,"code":"var _jsxFileName = \"/home/rohitmi0023/dict_movies_next/dict_movies/components/SearchResult.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nconst SearchResult = ({\n  searchresult\n}) => {\n  const {\n    0: movieId,\n    1: setMovieId\n  } = useState('');\n  let moviesList = [];\n  const movies = searchresult.data.Search;\n\n  const handleClick = Id => {\n    setMovieId(Id); // Router.push(`/movies/[movieId]`, `/movies/${Id}`)\n\n    Router.push({\n      pathname: '/movies/[movieId]',\n      query: {\n        movie: {\n          Id\n        }\n      }\n    });\n  };\n\n  if (movies) {\n    moviesList = movies.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }), __jsx(\"p\", {\n        className: \"movieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  } else {\n    moviesList.push(searchresult.data);\n    moviesList = moviesList.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }), __jsx(\"p\", {\n        className: \"movieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Search Results...\"), moviesList);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/dict_movies/components/SearchResult.js"],"names":["React","useState","Link","Router","SearchResult","searchresult","movieId","setMovieId","moviesList","movies","data","Search","handleClick","Id","push","pathname","query","movie","map","imdbID","Poster","Title","Year"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACvC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAIO,UAAU,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAGJ,YAAY,CAACK,IAAb,CAAkBC,MAAjC;;AAEA,QAAMC,WAAW,GAAIC,EAAD,IAAQ;AACxBN,IAAAA,UAAU,CAACM,EAAD,CAAV,CADwB,CAExB;;AACAV,IAAAA,MAAM,CAACW,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,mBADF;AAERC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEJ,UAAAA;AAAF;AAAT;AAFC,KAAZ;AAIH,GAPD;;AASA,MAAIJ,MAAJ,EAAY;AACRD,IAAAA,UAAU,GAAGC,MAAM,CAACS,GAAP,CAAYD,KAAD,IAAW;AAC/B,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAG,QAAA,OAAO,EAAE,MAAMP,WAAW,CAACK,KAAK,CAACE,MAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEF,KAAK,CAACG,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BH,KAAK,CAACI,KAAjC,QAA0CJ,KAAK,CAACK,IAAhD,MAFJ,CAFJ,CADJ;AAWH,KAZY,CAAb;AAaH,GAdD,MAeK;AACDd,IAAAA,UAAU,CAACM,IAAX,CAAgBT,YAAY,CAACK,IAA7B;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACU,GAAX,CAAgBD,KAAD,IAAW;AACnC,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,OAAO,EAAE,MAAMP,WAAW,CAACK,KAAK,CAACE,MAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEF,KAAK,CAACG,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BH,KAAK,CAACI,KAAjC,QAA0CJ,KAAK,CAACK,IAAhD,MAFJ,CADJ,CADJ;AAQH,KATY,CAAb;AAUH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAIKd,UAJL,CADJ;AAQH,CAlDD;;AAoDA,eAAeJ,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport Link from 'next/link'\nimport Router from 'next/router'\n\nconst SearchResult = ({ searchresult }) => {\n    const [movieId, setMovieId] = useState('')\n    let moviesList = []\n    const movies = searchresult.data.Search\n\n    const handleClick = (Id) => {\n        setMovieId(Id)\n        // Router.push(`/movies/[movieId]`, `/movies/${Id}`)\n        Router.push({\n            pathname: '/movies/[movieId]',\n            query: { movie: { Id } }\n        })\n    }\n\n    if (movies) {\n        moviesList = movies.map((movie) => {\n            return (\n                <div key={movie.imdbID} className='movie' >\n                    {/* <Link href=\"/movies/[movieId]\" as={`/movies/${movieId}`} > */}\n                    <a onClick={() => handleClick(movie.imdbID)}>\n                        <img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\n                    </a>\n                    {/* </Link > */}\n                </div>\n\n            )\n        })\n    }\n    else {\n        moviesList.push(searchresult.data)\n        moviesList = moviesList.map((movie) => {\n            return (\n                <div key={movie.imdbID} className='movie' >\n                    <a onClick={() => handleClick(movie.imdbID)}>\n                        <img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\n                    </a>\n                </div>\n            )\n        })\n    }\n    return (\n        <div>\n            <p>\n                Search Results...\n                </p>\n            {moviesList}\n        </div >\n    )\n}\n\nexport default SearchResult"]},"metadata":{},"sourceType":"module"}