{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\nimport NavBar from '../components/NavBar';\nimport Fab from '@material-ui/core/Fab';\nimport { Paper } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nvar Movies = function Movies() {\n  var _useState = useState(''),\n      currentMovie = _useState[0],\n      setCurrentMovie = _useState[1];\n\n  var router = useRouter();\n  var movieId = router.query.movieId;\n  useEffect(function () {\n    axios(\"http://www.omdbapi.com/?i=\".concat(movieId, \"&type=movie&apikey=\").concat(process.env.OmdbKey)).then(function (res) {\n      setCurrentMovie(res.data);\n    });\n  }, []);\n  var rating = currentMovie.Ratings;\n\n  if (rating) {\n    rating = rating.map(function (each) {\n      return __jsx(\"span\", {\n        key: Math.random()\n      }, __jsx(\"b\", null, each.Source, \" : \"), \" \", each.Value, __jsx(\"br\", null));\n    });\n  }\n\n  return __jsx(Fragment, null, __jsx(NavBar, null), __jsx(\"br\", null), __jsx(Fab, {\n    style: {\n      \"float\": 'right'\n    },\n    variant: \"extended\"\n  }, __jsx(Link, {\n    href: \"/[movieId]/dict\",\n    as: \"/\".concat(movieId, \"/dict\")\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none',\n      letterSpacing: '1.5px'\n    }\n  }, \"Words\"))), __jsx(\"span\", {\n    className: \"currentMovieTitle\"\n  }, currentMovie.Title), currentMovie ? __jsx(\"div\", {\n    className: \"currentMovieHead\"\n  }, __jsx(\"img\", {\n    src: currentMovie.Poster,\n    alt: \"Movie poster\",\n    className: \"currentMoviePoster\"\n  }), __jsx(\"div\", {\n    className: \"currentMovieDetailsHead\"\n  }, __jsx(\"span\", {\n    className: \"currentMoviePlot\"\n  }, currentMovie.Plot), __jsx(\"br\", null), __jsx(Paper, {\n    elevation: 3,\n    className: \"currentMovieDetails\"\n  }, __jsx(\"span\", {\n    style: {\n      padding: '15px 15px'\n    }\n  }, __jsx(\"span\", null, __jsx(\"b\", null, \"Released on :\"), \" \", currentMovie.Released), __jsx(\"br\", null), __jsx(\"span\", null, __jsx(\"b\", null, \"Directed by: \")), currentMovie.Director, __jsx(\"br\", null), __jsx(\"span\", null, __jsx(\"b\", null, \"Genre:\"), \" \", currentMovie.Genre), __jsx(\"br\", null), __jsx(\"span\", null, __jsx(\"b\", null, \"Cast :\"), \" \", currentMovie.Actors))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Paper, {\n    elevation: 3,\n    className: \"currentMovieDetails\"\n  }, __jsx(\"span\", {\n    style: {\n      padding: '15px 15px'\n    }\n  }, rating)))) : __jsx(\"div\", null, __jsx(CircularProgress, {\n    style: {\n      margin: '0 auto'\n    }\n  })));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/[movieId].js"],"names":["axios","useRouter","useEffect","useState","Fragment","Link","NavBar","Fab","Paper","CircularProgress","Movies","currentMovie","setCurrentMovie","router","movieId","query","process","env","OmdbKey","then","res","data","rating","Ratings","map","each","Math","random","Source","Value","textDecoration","letterSpacing","Title","Poster","Plot","padding","Released","Director","Genre","Actors","margin"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\nimport NavBar from '../components/NavBar';\nimport Fab from '@material-ui/core/Fab';\nimport { Paper } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Movies = () => {\n\tconst [currentMovie, setCurrentMovie] = useState('');\n\tconst router = useRouter();\n\tconst { movieId } = router.query;\n\n\tuseEffect(() => {\n\t\taxios(`http://www.omdbapi.com/?i=${movieId}&type=movie&apikey=${process.env.OmdbKey}`).then(\n\t\t\tres => {\n\t\t\t\tsetCurrentMovie(res.data);\n\t\t\t}\n\t\t);\n\t}, []);\n\n\tlet rating = currentMovie.Ratings;\n\tif (rating) {\n\t\trating = rating.map(each => {\n\t\t\treturn (\n\t\t\t\t<span key={Math.random()}>\n\t\t\t\t\t<b>{each.Source} : </b> {each.Value}\n\t\t\t\t\t<br />\n\t\t\t\t</span>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<NavBar />\n\t\t\t<br />\n\t\t\t<Fab style={{ float: 'right' }} variant='extended'>\n\t\t\t\t<Link href='/[movieId]/dict' as={`/${movieId}/dict`}>\n\t\t\t\t\t<a style={{ textDecoration: 'none', letterSpacing: '1.5px' }}>Words</a>\n\t\t\t\t</Link>\n\t\t\t</Fab>\n\t\t\t<span className='currentMovieTitle'>{currentMovie.Title}</span>\n\t\t\t{currentMovie ? (\n\t\t\t\t<div className='currentMovieHead'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={currentMovie.Poster}\n\t\t\t\t\t\talt='Movie poster'\n\t\t\t\t\t\tclassName='currentMoviePoster'\n\t\t\t\t\t></img>\n\t\t\t\t\t<div className='currentMovieDetailsHead'>\n\t\t\t\t\t\t<span className='currentMoviePlot'>{currentMovie.Plot}</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Paper elevation={3} className='currentMovieDetails'>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tpadding: '15px 15px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<b>Released on :</b> {currentMovie.Released}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<b>Directed by: </b>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{currentMovie.Director}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<b>Genre:</b> {currentMovie.Genre}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<b>Cast :</b> {currentMovie.Actors}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Paper elevation={3} className='currentMovieDetails'>\n\t\t\t\t\t\t\t<span style={{ padding: '15px 15px' }}>{rating}</span>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<CircularProgress style={{ margin: '0 auto' }} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}