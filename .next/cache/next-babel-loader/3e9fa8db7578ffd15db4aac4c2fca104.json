{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\n\nvar SearchResult = function SearchResult(_ref) {\n  var searchresult = _ref.searchresult;\n\n  var _useState = useState(''),\n      currentMovie = _useState[0],\n      setCurrentMovie = _useState[1];\n\n  console.log(searchresult);\n  var moviesList = [];\n  var movies = searchresult.data.Search;\n\n  var handleClick = function handleClick(Id) {\n    setCurrentMovie(Id);\n    Router.push(\"/[movieId]\", \"/\".concat(Id));\n  };\n\n  if (movies) {\n    // User has not submitted the form\n    moviesList = movies.map(function (movie) {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return handleClick(movie.imdbID);\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  } else {\n    moviesList.push(searchresult.data);\n    moviesList = moviesList.map(function (movie) {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return handleClick(movie.imdbID);\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"p\", null, \"Search Results...\"), moviesList);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/SearchResult.js"],"names":["React","useState","Router","SearchResult","searchresult","currentMovie","setCurrentMovie","console","log","moviesList","movies","data","Search","handleClick","Id","push","map","movie","imdbID","Poster","Title","Year"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBACFH,QAAQ,CAAC,EAAD,CADN;AAAA,MACnCI,YADmC;AAAA,MACrBC,eADqB;;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,MAAIK,UAAU,GAAG,EAAjB;AACA,MAAMC,MAAM,GAAGN,YAAY,CAACO,IAAb,CAAkBC,MAAjC;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,EAAE,EAAI;AACzBR,IAAAA,eAAe,CAACQ,EAAD,CAAf;AACAZ,IAAAA,MAAM,CAACa,IAAP,0BAA8BD,EAA9B;AACA,GAHD;;AAKA,MAAIJ,MAAJ,EAAY;AACX;AACAD,IAAAA,UAAU,GAAGC,MAAM,CAACM,GAAP,CAAW,UAAAC,KAAK,EAAI;AAChC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SACC;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAML,WAAW,CAACI,KAAK,CAACC,MAAP,CAAjB;AAAA;AAAZ,SACC;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEF,KAAK,CAACG,KADR,QACiBH,KAAK,CAACI,IADvB,MAFD,CADD,CADD;AAUA,KAXY,CAAb;AAYA,GAdD,MAcO;AACNZ,IAAAA,UAAU,CAACM,IAAX,CAAgBX,YAAY,CAACO,IAA7B;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAe,UAAAC,KAAK,EAAI;AACpC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SACC;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAML,WAAW,CAACI,KAAK,CAACC,MAAP,CAAjB;AAAA;AAAZ,SACC;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEF,KAAK,CAACG,KADR,QACiBH,KAAK,CAACI,IADvB,MAFD,CADD,CADD;AAUA,KAXY,CAAb;AAYA;;AACD,SACC,mBACC,qCADD,EAEEZ,UAFF,CADD;AAMA,CA9CD;;AAgDA,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport Router from 'next/router';\n\nconst SearchResult = ({ searchresult }) => {\n\tconst [currentMovie, setCurrentMovie] = useState('');\n\tconsole.log(searchresult);\n\tlet moviesList = [];\n\tconst movies = searchresult.data.Search;\n\n\tconst handleClick = Id => {\n\t\tsetCurrentMovie(Id);\n\t\tRouter.push(`/[movieId]`, `/${Id}`);\n\t};\n\n\tif (movies) {\n\t\t// User has not submitted the form\n\t\tmoviesList = movies.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t} else {\n\t\tmoviesList.push(searchresult.data);\n\t\tmoviesList = moviesList.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<p>Search Results...</p>\n\t\t\t{moviesList}\n\t\t</div>\n\t);\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}