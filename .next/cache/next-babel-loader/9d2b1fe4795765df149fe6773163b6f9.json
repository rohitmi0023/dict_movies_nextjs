{"ast":null,"code":"var _jsxFileName = \"/home/rohitmi0023/dict_movies_next/dict_movies/components/SearchResult.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Router from 'next/router';\nimport { CurrentMovieContext } from '../context/currentMovieContext';\n\nconst SearchResult = ({\n  searchresult\n}) => {\n  const {\n    0: currentMovie,\n    1: setCurrentMovie\n  } = useContext(CurrentMovieContext);\n  let moviesList = [];\n  const movies = searchresult.data.Search;\n\n  const handleClick = Id => {\n    setCurrentMovie(Id);\n    Router.push(`/movies/[movieId]`, `/movies/${Id}`);\n  };\n\n  if (movies) {\n    moviesList = movies.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }), __jsx(\"p\", {\n        className: \"movieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  } else {\n    moviesList.push(searchresult.data);\n    moviesList = moviesList.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }), __jsx(\"p\", {\n        className: \"movieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Search Results...\"), moviesList);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/dict_movies/components/SearchResult.js"],"names":["React","useState","useContext","Router","CurrentMovieContext","SearchResult","searchresult","currentMovie","setCurrentMovie","moviesList","movies","data","Search","handleClick","Id","push","map","movie","imdbID","Poster","Title","Year"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,mBAAT,QAAoC,gCAApC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACvC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCN,UAAU,CAACE,mBAAD,CAAlD;AACA,MAAIK,UAAU,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAGJ,YAAY,CAACK,IAAb,CAAkBC,MAAjC;;AAEA,QAAMC,WAAW,GAAIC,EAAD,IAAQ;AACxBN,IAAAA,eAAe,CAACM,EAAD,CAAf;AACAX,IAAAA,MAAM,CAACY,IAAP,CAAa,mBAAb,EAAkC,WAAUD,EAAG,EAA/C;AACH,GAHD;;AAKA,MAAIJ,MAAJ,EAAY;AACRD,IAAAA,UAAU,GAAGC,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;AAC/B,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAG,QAAA,OAAO,EAAE,MAAML,WAAW,CAACI,KAAK,CAACC,MAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BF,KAAK,CAACG,KAAjC,QAA0CH,KAAK,CAACI,IAAhD,MAFJ,CAFJ,CADJ;AAWH,KAZY,CAAb;AAaH,GAdD,MAeK;AACDZ,IAAAA,UAAU,CAACM,IAAX,CAAgBT,YAAY,CAACK,IAA7B;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAgBC,KAAD,IAAW;AACnC,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,OAAO,EAAE,MAAML,WAAW,CAACI,KAAK,CAACC,MAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BF,KAAK,CAACG,KAAjC,QAA0CH,KAAK,CAACI,IAAhD,MAFJ,CADJ,CADJ;AAQH,KATY,CAAb;AAUH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAIKZ,UAJL,CADJ;AAQH,CA9CD;;AAgDA,eAAeJ,YAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport Router from 'next/router'\nimport { CurrentMovieContext } from '../context/currentMovieContext'\n\nconst SearchResult = ({ searchresult }) => {\n    const [currentMovie, setCurrentMovie] = useContext(CurrentMovieContext)\n    let moviesList = []\n    const movies = searchresult.data.Search\n\n    const handleClick = (Id) => {\n        setCurrentMovie(Id)\n        Router.push(`/movies/[movieId]`, `/movies/${Id}`)\n    }\n\n    if (movies) {\n        moviesList = movies.map((movie) => {\n            return (\n                <div key={movie.imdbID} className='movie' >\n                    {/* <Link href=\"/movies/[movieId]\" as={`/movies/${movieId}`} > */}\n                    <a onClick={() => handleClick(movie.imdbID)}>\n                        <img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\n                    </a>\n                    {/* </Link > */}\n                </div>\n\n            )\n        })\n    }\n    else {\n        moviesList.push(searchresult.data)\n        moviesList = moviesList.map((movie) => {\n            return (\n                <div key={movie.imdbID} className='movie' >\n                    <a onClick={() => handleClick(movie.imdbID)}>\n                        <img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\n                    </a>\n                </div>\n            )\n        })\n    }\n    return (\n        <div>\n            <p>\n                Search Results...\n                </p>\n            {moviesList}\n        </div >\n    )\n}\n\nexport default SearchResult"]},"metadata":{},"sourceType":"module"}