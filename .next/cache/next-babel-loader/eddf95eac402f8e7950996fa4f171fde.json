{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\n\nconst Movies = () => {\n  const {\n    0: currentMovie,\n    1: setCurrentMovie\n  } = useState('');\n  const router = useRouter();\n  console.log(router);\n  const {\n    movieId\n  } = router.query;\n\n  const fetchData = async () => {\n    const res = await axios(`http://www.omdbapi.com/?i=${movieId}&type=movie&apikey=${process.env.OmdbKey}`);\n    setCurrentMovie(res.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  let rating = currentMovie.Ratings;\n\n  if (rating) {\n    rating = rating.map(each => {\n      return __jsx(\"div\", null, __jsx(\"p\", null, each.Source, \": \", each.Value));\n    });\n  }\n\n  return __jsx(Fragment, null, __jsx(Link, {\n    href: \"/[movieId]/dict\",\n    as: `/${movieId}/dict`\n  }, __jsx(\"a\", null, \"Go to it's dictionary\")), currentMovie ? __jsx(\"div\", null, __jsx(\"p\", null, \"Movie Name: \", currentMovie.Title), __jsx(\"p\", null, \"Released on : \", currentMovie.Released), __jsx(\"img\", {\n    src: currentMovie.Poster,\n    alt: \"Movie poster\"\n  }), __jsx(\"p\", null, \"Directed by: \", currentMovie.Director), __jsx(\"p\", null, \"Genre: \", currentMovie.Genre), __jsx(\"span\", null, rating)) : __jsx(\"p\", null, \"Loading...\"));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/pages/[movieId].js"],"names":["axios","useRouter","useEffect","useState","Fragment","Link","Movies","currentMovie","setCurrentMovie","router","console","log","movieId","query","fetchData","res","process","env","OmdbKey","data","rating","Ratings","map","each","Source","Value","Title","Released","Poster","Director","Genre"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMM,MAAM,GAAGR,SAAS,EAAxB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcH,MAAM,CAACI,KAA3B;;AACA,QAAMC,SAAS,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMf,KAAK,CACrB,6BAA4BY,OAAQ,sBAAqBI,OAAO,CAACC,GAAR,CAAYC,OAAQ,EADxD,CAAvB;AAGAV,IAAAA,eAAe,CAACO,GAAG,CAACI,IAAL,CAAf;AACA,GALD;;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,SAAS;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAIM,MAAM,GAAGb,YAAY,CAACc,OAA1B;;AACA,MAAID,MAAJ,EAAY;AACXA,IAAAA,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAWC,IAAI,IAAI;AAC3B,aACC,mBACC,iBACEA,IAAI,CAACC,MADP,QACiBD,IAAI,CAACE,KADtB,CADD,CADD;AAOA,KARQ,CAAT;AASA;;AACD,SACC,MAAC,QAAD,QACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAA6B,IAAA,EAAE,EAAG,IAAGb,OAAQ;AAA7C,KACC,yCADD,CADD,EAIEL,YAAY,GACZ,mBACC,iCAAgBA,YAAY,CAACmB,KAA7B,CADD,EAEC,mCAAkBnB,YAAY,CAACoB,QAA/B,CAFD,EAGC;AAAK,IAAA,GAAG,EAAEpB,YAAY,CAACqB,MAAvB;AAA+B,IAAA,GAAG,EAAC;AAAnC,IAHD,EAIC,kCAAiBrB,YAAY,CAACsB,QAA9B,CAJD,EAKC,4BAAWtB,YAAY,CAACuB,KAAxB,CALD,EAMC,oBAAOV,MAAP,CAND,CADY,GAUZ,8BAdF,CADD;AAmBA,CA7CD;;AA+CA,eAAed,MAAf","sourcesContent":["import axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, Fragment } from 'react';\nimport Link from 'next/link';\n\nconst Movies = () => {\n\tconst [currentMovie, setCurrentMovie] = useState('');\n\tconst router = useRouter();\n\tconsole.log(router);\n\tconst { movieId } = router.query;\n\tconst fetchData = async () => {\n\t\tconst res = await axios(\n\t\t\t`http://www.omdbapi.com/?i=${movieId}&type=movie&apikey=${process.env.OmdbKey}`\n\t\t);\n\t\tsetCurrentMovie(res.data);\n\t};\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\tlet rating = currentMovie.Ratings;\n\tif (rating) {\n\t\trating = rating.map(each => {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{each.Source}: {each.Value}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<Link href='/[movieId]/dict' as={`/${movieId}/dict`}>\n\t\t\t\t<a>Go to it's dictionary</a>\n\t\t\t</Link>\n\t\t\t{currentMovie ? (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Movie Name: {currentMovie.Title}</p>\n\t\t\t\t\t<p>Released on : {currentMovie.Released}</p>\n\t\t\t\t\t<img src={currentMovie.Poster} alt='Movie poster'></img>\n\t\t\t\t\t<p>Directed by: {currentMovie.Director}</p>\n\t\t\t\t\t<p>Genre: {currentMovie.Genre}</p>\n\t\t\t\t\t<span>{rating}</span>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}