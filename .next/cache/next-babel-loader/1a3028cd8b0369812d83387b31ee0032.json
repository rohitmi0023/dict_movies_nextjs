{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nconst WordResults = ({\n  data\n}) => {\n  const {\n    0: words,\n    1: setWords\n  } = useState([]);\n  const router = useRouter();\n  let wordList = [];\n  useEffect(() => {\n    const config = {\n      'Content-Type': 'application/json'\n    };\n    Axios.get(`/api/${router.query.movieId}/dict`, config).then(res => {\n      setWords(res.data);\n    });\n  }, []);\n\n  if (words.length) {\n    console.log(words); // wordList = words.map(each => {\n    // \treturn (\n    // \t\t<div key={each.id}>\n    // \t\t\t<span>{each.word}</span>\n    // \t\t</div>\n    // \t);\n    // });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"p\", null, data.Title, \" Dictionary...\"));\n};\n\nexport default WordResults;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/WordResults.js"],"names":["React","useState","useEffect","Axios","useRouter","WordResults","data","words","setWords","router","wordList","config","get","query","movieId","then","res","length","console","log","Title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMQ,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAIM,QAAQ,GAAG,EAAf;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,MAAM,GAAG;AACd,sBAAgB;AADF,KAAf;AAGAR,IAAAA,KAAK,CAACS,GAAN,CAAW,QAAOH,MAAM,CAACI,KAAP,CAAaC,OAAQ,OAAvC,EAA+CH,MAA/C,EAAuDI,IAAvD,CAA4DC,GAAG,IAAI;AAClER,MAAAA,QAAQ,CAACQ,GAAG,CAACV,IAAL,CAAR;AACA,KAFD;AAGA,GAPQ,EAON,EAPM,CAAT;;AAQA,MAAIC,KAAK,CAACU,MAAV,EAAkB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAED,SACC,mBACC,iBAAID,IAAI,CAACc,KAAT,mBADD,CADD;AAOA,CA/BD;;AAiCA,eAAef,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nconst WordResults = ({ data }) => {\n\tconst [words, setWords] = useState([]);\n\tconst router = useRouter();\n\tlet wordList = [];\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\t'Content-Type': 'application/json',\n\t\t};\n\t\tAxios.get(`/api/${router.query.movieId}/dict`, config).then(res => {\n\t\t\tsetWords(res.data);\n\t\t});\n\t}, []);\n\tif (words.length) {\n\t\tconsole.log(words);\n\t\t// wordList = words.map(each => {\n\t\t// \treturn (\n\t\t// \t\t<div key={each.id}>\n\t\t// \t\t\t<span>{each.word}</span>\n\t\t// \t\t</div>\n\t\t// \t);\n\t\t// });\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<p>{data.Title} Dictionary...</p>\n\t\t\t{/* {console.log(wordList)} */}\n\t\t\t{/* <span>{words.length ? { wordList } : <p>No words found!!!</p>}</span> */}\n\t\t</div>\n\t);\n};\n\nexport default WordResults;\n"]},"metadata":{},"sourceType":"module"}