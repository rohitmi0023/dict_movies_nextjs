{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport ExposurePlus1TwoToneIcon from '@material-ui/icons/ExposurePlus1TwoTone';\nimport ExposureNeg1TwoToneIcon from '@material-ui/icons/ExposureNeg1TwoTone';\nimport Axios from 'axios';\n\nconst WordResults = ({\n  words\n}) => {\n  const handleClick = async (word_id, vote) => {\n    count_votes = +1;\n\n    if (count_votes === 1) {\n      const word_id_var = {\n        word_id: `${word_id}`,\n        vote: `${vote}`\n      };\n      const body = JSON.stringify(word_id_var);\n      console.log(body);\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await Axios.post(`/api/:id/dict/${word_id}`, body, config);\n    } else {\n      alert('Vote only once!!!');\n    } // console.log(res);\n\n  };\n\n  return __jsx(\"div\", null, words.data ? words.data.length ? __jsx(\"div\", null, words.data.map(each => {\n    return __jsx(\"span\", {\n      key: each.id\n    }, each.word, \" \", '  ', __jsx(ExposurePlus1TwoToneIcon, {\n      onClick: () => handleClick(each.id, +1)\n    }), ' ', '  ', ' ', __jsx(ExposureNeg1TwoToneIcon, {\n      onClick: () => handleClick(each.id, -1)\n    }), '  ');\n  })) : __jsx(\"p\", null, \"Nothing found!!!\") : __jsx(\"p\", null, \"Loading...\"));\n};\n\nexport default WordResults;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/WordResults.js"],"names":["React","ExposurePlus1TwoToneIcon","ExposureNeg1TwoToneIcon","Axios","WordResults","words","handleClick","word_id","vote","count_votes","word_id_var","body","JSON","stringify","console","log","config","headers","res","post","alert","data","length","map","each","id","word"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAClC,QAAMC,WAAW,GAAG,OAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AAC5CC,IAAAA,WAAW,GAAG,CAAC,CAAf;;AACA,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACtB,YAAMC,WAAW,GAAG;AACnBH,QAAAA,OAAO,EAAG,GAAEA,OAAQ,EADD;AAEnBC,QAAAA,IAAI,EAAG,GAAEA,IAAK;AAFK,OAApB;AAIA,YAAMG,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,WAAf,CAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,YAAMK,MAAM,GAAG;AACdC,QAAAA,OAAO,EAAE;AACR,0BAAgB;AADR;AADK,OAAf;AAKA,YAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAY,iBAAgBZ,OAAQ,EAApC,EAAuCI,IAAvC,EAA6CK,MAA7C,CAAlB;AACA,KAbD,MAaO;AACNI,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACA,KAjB2C,CAkB5C;;AACA,GAnBD;;AAqBA,SACC,mBACEf,KAAK,CAACgB,IAAN,GACAhB,KAAK,CAACgB,IAAN,CAAWC,MAAX,GACC,mBACEjB,KAAK,CAACgB,IAAN,CAAWE,GAAX,CAAeC,IAAI,IAAI;AACvB,WACC;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,OACED,IAAI,CAACE,IADP,OACc,IADd,EAEC,MAAC,wBAAD;AACC,MAAA,OAAO,EAAE,MAAMpB,WAAW,CAACkB,IAAI,CAACC,EAAN,EAAU,CAAC,CAAX;AAD3B,MAFD,EAII,GAJJ,EAKE,IALF,EAKQ,GALR,EAMC,MAAC,uBAAD;AACC,MAAA,OAAO,EAAE,MAAMnB,WAAW,CAACkB,IAAI,CAACC,EAAN,EAAU,CAAC,CAAX;AAD3B,MAND,EASE,IATF,CADD;AAaA,GAdA,CADF,CADD,GAmBC,oCApBD,GAuBA,8BAxBF,CADD;AA6BA,CAnDD;;AAqDA,eAAerB,WAAf","sourcesContent":["import React from 'react';\nimport ExposurePlus1TwoToneIcon from '@material-ui/icons/ExposurePlus1TwoTone';\nimport ExposureNeg1TwoToneIcon from '@material-ui/icons/ExposureNeg1TwoTone';\nimport Axios from 'axios';\n\nconst WordResults = ({ words }) => {\n\tconst handleClick = async (word_id, vote) => {\n\t\tcount_votes = +1;\n\t\tif (count_votes === 1) {\n\t\t\tconst word_id_var = {\n\t\t\t\tword_id: `${word_id}`,\n\t\t\t\tvote: `${vote}`,\n\t\t\t};\n\t\t\tconst body = JSON.stringify(word_id_var);\n\t\t\tconsole.log(body);\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst res = await Axios.post(`/api/:id/dict/${word_id}`, body, config);\n\t\t} else {\n\t\t\talert('Vote only once!!!');\n\t\t}\n\t\t// console.log(res);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{words.data ? (\n\t\t\t\twords.data.length ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{words.data.map(each => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<span key={each.id}>\n\t\t\t\t\t\t\t\t\t{each.word} {'  '}\n\t\t\t\t\t\t\t\t\t<ExposurePlus1TwoToneIcon\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick(each.id, +1)}\n\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t{'  '}{' '}\n\t\t\t\t\t\t\t\t\t<ExposureNeg1TwoToneIcon\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick(each.id, -1)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{'  '}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Nothing found!!!</p>\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default WordResults;\n"]},"metadata":{},"sourceType":"module"}