{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchResult from './SearchResult';\nimport TextField from '@material-ui/core/TextField';\n\nvar SearchMovies = function SearchMovies() {\n  var _useState = useState(''),\n      searchFormData = _useState[0],\n      setSearchFormData = _useState[1];\n\n  var _useState2 = useState({}),\n      searchResult = _useState2[0],\n      setSearchResult = _useState2[1];\n\n  var urlforSearch = \"http://www.omdbapi.com/?s=\\\"\".concat(searchFormData, \"\\\"&type=movie&apikey=\").concat(process.env.OmdbKey);\n  var urlforTitle = \"http://www.omdbapi.com/?t=\\\"\".concat(searchFormData, \"\\\"&type=movie&apikey=9bc37d14\");\n\n  var handleChange = function handleChange(e) {\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSearchFormData(e.target.value);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var res;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(urlforTitle));\n\n          case 3:\n            res = _context2.sent;\n            console.log(res); // if (res.data.Response === 'True') {\n            // setSearchResult(res);\n            // } else {\n\n            setSearchResult(res); // }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    console.log(\"1\");\n    axios.get(urlforSearch).then(function (res) {\n      if (res.data.Response === 'True') {\n        setSearchResult(res);\n      } else {\n        setSearchResult(res);\n      }\n    });\n  }, [searchFormData]);\n  return __jsx(\"div\", null, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    style: {\n      textAlign: 'center',\n      paddingTop: '15px'\n    }\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    type: \"text\",\n    value: searchFormData,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    label: \"Search for movies\"\n  })), __jsx(\"br\", null), searchFormData ? searchResult.data && searchResult.data.Response === 'True' ? __jsx(SearchResult, {\n    searchresult: searchResult\n  }) : searchResult.data && searchResult.data.Response === 'False' && __jsx(\"p\", null, searchResult.data.Error) : __jsx(\"p\", null, \" Nothing to search!!! \"));\n};\n\nexport default SearchMovies;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/SearchMovies.js"],"names":["React","useState","useEffect","axios","SearchResult","TextField","SearchMovies","searchFormData","setSearchFormData","searchResult","setSearchResult","urlforSearch","process","env","OmdbKey","urlforTitle","handleChange","e","target","value","handleSubmit","preventDefault","get","res","console","log","then","data","Response","textAlign","paddingTop","Error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACkBL,QAAQ,CAAC,EAAD,CAD1B;AAAA,MACnBM,cADmB;AAAA,MACHC,iBADG;;AAAA,mBAEcP,QAAQ,CAAC,EAAD,CAFtB;AAAA,MAEnBQ,YAFmB;AAAA,MAELC,eAFK;;AAG1B,MAAMC,YAAY,yCAAiCJ,cAAjC,kCAAsEK,OAAO,CAACC,GAAR,CAAYC,OAAlF,CAAlB;AACA,MAAMC,WAAW,yCAAiCR,cAAjC,kCAAjB;;AAEA,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACpBT,YAAAA,iBAAiB,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBA,YAAAA,CAAC,CAACI,cAAF;AADoB;AAAA,6CAEFlB,KAAK,CAACmB,GAAN,CAAUP,WAAV,CAFE;;AAAA;AAEdQ,YAAAA,GAFc;AAGpBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAHoB,CAIpB;AACA;AACA;;AACAb,YAAAA,eAAe,CAACa,GAAD,CAAf,CAPoB,CAQpB;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAWArB,EAAAA,SAAS,CAAC,YAAM;AACfsB,IAAAA,OAAO,CAACC,GAAR;AACAtB,IAAAA,KAAK,CAACmB,GAAN,CAAUX,YAAV,EAAwBe,IAAxB,CAA6B,UAAAH,GAAG,EAAI;AACnC,UAAIA,GAAG,CAACI,IAAJ,CAASC,QAAT,KAAsB,MAA1B,EAAkC;AACjClB,QAAAA,eAAe,CAACa,GAAD,CAAf;AACA,OAFD,MAEO;AACNb,QAAAA,eAAe,CAACa,GAAD,CAAf;AACA;AACD,KAND;AAOA,GATQ,EASN,CAAChB,cAAD,CATM,CAAT;AAWA,SACC,mBACC;AACC,IAAA,UAAU,MADX;AAEC,IAAA,YAAY,EAAC,KAFd;AAGC,IAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,aAAIG,YAAY,CAACH,CAAD,CAAhB;AAAA,KAHZ;AAIC,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE;AAAnC;AAJR,KAMC,MAAC,SAAD;AACC,IAAA,EAAE,EAAC,gBADJ;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,KAAK,EAAEvB,cAHR;AAIC,IAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,aAAID,YAAY,CAACC,CAAD,CAAhB;AAAA,KAJZ;AAKC,IAAA,KAAK,EAAC;AALP,IAND,CADD,EAeC,iBAfD,EAgBEV,cAAc,GACdE,YAAY,CAACkB,IAAb,IAAqBlB,YAAY,CAACkB,IAAb,CAAkBC,QAAlB,KAA+B,MAApD,GACC,MAAC,YAAD;AAAc,IAAA,YAAY,EAAEnB;AAA5B,IADD,GAGCA,YAAY,CAACkB,IAAb,IACAlB,YAAY,CAACkB,IAAb,CAAkBC,QAAlB,KAA+B,OAD/B,IAC0C,iBAAInB,YAAY,CAACkB,IAAb,CAAkBI,KAAtB,CAL7B,GAQd,0CAxBF,CADD;AA6BA,CA7DD;;AA+DA,eAAezB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchResult from './SearchResult';\nimport TextField from '@material-ui/core/TextField';\n\nconst SearchMovies = () => {\n\tconst [searchFormData, setSearchFormData] = useState('');\n\tconst [searchResult, setSearchResult] = useState({});\n\tconst urlforSearch = `http://www.omdbapi.com/?s=\"${searchFormData}\"&type=movie&apikey=${process.env.OmdbKey}`;\n\tconst urlforTitle = `http://www.omdbapi.com/?t=\"${searchFormData}\"&type=movie&apikey=9bc37d14`;\n\n\tconst handleChange = async e => {\n\t\tsetSearchFormData(e.target.value);\n\t};\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst res = await axios.get(urlforTitle);\n\t\tconsole.log(res);\n\t\t// if (res.data.Response === 'True') {\n\t\t// setSearchResult(res);\n\t\t// } else {\n\t\tsetSearchResult(res);\n\t\t// }\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log(`1`);\n\t\taxios.get(urlforSearch).then(res => {\n\t\t\tif (res.data.Response === 'True') {\n\t\t\t\tsetSearchResult(res);\n\t\t\t} else {\n\t\t\t\tsetSearchResult(res);\n\t\t\t}\n\t\t});\n\t}, [searchFormData]);\n\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\t\tnoValidate\n\t\t\t\tautoComplete='off'\n\t\t\t\tonSubmit={e => handleSubmit(e)}\n\t\t\t\tstyle={{ textAlign: 'center', paddingTop: '15px' }}\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tid='standard-basic'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={searchFormData}\n\t\t\t\t\tonChange={e => handleChange(e)}\n\t\t\t\t\tlabel='Search for movies'\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<br />\n\t\t\t{searchFormData ? (\n\t\t\t\tsearchResult.data && searchResult.data.Response === 'True' ? (\n\t\t\t\t\t<SearchResult searchresult={searchResult} />\n\t\t\t\t) : (\n\t\t\t\t\tsearchResult.data &&\n\t\t\t\t\tsearchResult.data.Response === 'False' && <p>{searchResult.data.Error}</p>\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<p> Nothing to search!!! </p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default SearchMovies;\n"]},"metadata":{},"sourceType":"module"}