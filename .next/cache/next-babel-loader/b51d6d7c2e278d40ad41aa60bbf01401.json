{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nvar WordResults = function WordResults(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      words = _useState[0],\n      setWords = _useState[1];\n\n  var router = useRouter(); // const fetchWords = async () => {\n  // const body = data.movieId;\n  // const config = {\n  // \t'Content-Type': 'application/json',\n  // };\n  // const res = await Axios.get(`/api/${router.query.movieId}/dict`, config);\n  // setWords(res.data);\n  // };\n\n  useEffect(function () {\n    var config = {\n      'Content-Type': 'application/json'\n    };\n    Axios.get(\"/api/\".concat(router.query.movieId, \"/dict\"), config).then(function (res) {\n      setWords(res.data);\n    });\n  }, []);\n  return __jsx(\"div\", null, __jsx(\"p\", null, data.Title, \" Dictionary...\"), __jsx(\"span\", null, words.length ? __jsx(\"span\", null, words.map(function (word) {\n    console.log(word);\n    return __jsx(\"span\", null, word);\n  })) : __jsx(\"p\", null, \"No words found!!!\")));\n};\n\nexport default WordResults;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/WordResults.js"],"names":["React","useState","useEffect","Axios","useRouter","WordResults","data","words","setWords","router","config","get","query","movieId","then","res","Title","length","map","word","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACPL,QAAQ,CAAC,EAAD,CADD;AAAA,MAC1BM,KAD0B;AAAA,MACnBC,QADmB;;AAEjC,MAAMC,MAAM,GAAGL,SAAS,EAAxB,CAFiC,CAIjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMQ,MAAM,GAAG;AACd,sBAAgB;AADF,KAAf;AAGAP,IAAAA,KAAK,CAACQ,GAAN,gBAAkBF,MAAM,CAACG,KAAP,CAAaC,OAA/B,YAA+CH,MAA/C,EAAuDI,IAAvD,CAA4D,UAAAC,GAAG,EAAI;AAClEP,MAAAA,QAAQ,CAACO,GAAG,CAACT,IAAL,CAAR;AACA,KAFD;AAGA,GAPQ,EAON,EAPM,CAAT;AASA,SACC,mBACC,iBAAIA,IAAI,CAACU,KAAT,mBADD,EAGC,oBACET,KAAK,CAACU,MAAN,GACA,oBACEV,KAAK,CAACW,GAAN,CAAU,UAAAC,IAAI,EAAI;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAO,oBAAOA,IAAP,CAAP;AACA,GAHA,CADF,CADA,GAQA,qCATF,CAHD,CADD;AAkBA,CAxCD;;AA0CA,eAAed,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nconst WordResults = ({ data }) => {\n\tconst [words, setWords] = useState([]);\n\tconst router = useRouter();\n\n\t// const fetchWords = async () => {\n\t// const body = data.movieId;\n\t// const config = {\n\t// \t'Content-Type': 'application/json',\n\t// };\n\t// const res = await Axios.get(`/api/${router.query.movieId}/dict`, config);\n\t// setWords(res.data);\n\t// };\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\t'Content-Type': 'application/json',\n\t\t};\n\t\tAxios.get(`/api/${router.query.movieId}/dict`, config).then(res => {\n\t\t\tsetWords(res.data);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>{data.Title} Dictionary...</p>\n\t\t\t{/* {console.log(words)} */}\n\t\t\t<span>\n\t\t\t\t{words.length ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{words.map(word => {\n\t\t\t\t\t\t\tconsole.log(word);\n\t\t\t\t\t\t\treturn <span>{word}</span>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</span>\n\t\t\t\t) : (\n\t\t\t\t\t<p>No words found!!!</p>\n\t\t\t\t)}\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default WordResults;\n"]},"metadata":{},"sourceType":"module"}