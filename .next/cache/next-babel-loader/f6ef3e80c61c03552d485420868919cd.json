{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport Paper from '@material-ui/core/Paper';\n\nconst SearchResult = ({\n  searchresult\n}) => {\n  let moviesList = [];\n  const movies = searchresult.data.Search;\n\n  const handleClick = Id => {\n    Router.push(`/[movieId]`, `/${Id}`);\n  };\n\n  if (movies) {\n    // User has not submitted the form, we are diplaying the array results\n    moviesList = movies.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(Paper, {\n        elevation: 5\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID)\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\"))));\n    });\n  } else {\n    // User has submiited the form, we are displaying the best matched a single movie\n    moviesList.push(searchresult.data);\n    moviesList = moviesList.map(movie => {\n      return __jsx(\"div\", {\n        key: movie.imdbID,\n        className: \"movie\"\n      }, __jsx(\"a\", {\n        onClick: () => handleClick(movie.imdbID)\n      }, __jsx(\"img\", {\n        src: movie.Poster,\n        className: \"moviePoster\",\n        alt: \"Movie poster\"\n      }), __jsx(\"p\", {\n        className: \"movieTitle\"\n      }, movie.Title, \" (\", movie.Year, \")\")));\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"p\", {\n    className: \"resultsText\" // style={{ textAlign: 'center', textShadow: '4px 4px 9px black' }}\n\n  }, \"Search Results...\"), moviesList);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/rohitmi0023/dict_movies_next/frontend/components/SearchResult.js"],"names":["Router","Paper","SearchResult","searchresult","moviesList","movies","data","Search","handleClick","Id","push","map","movie","imdbID","Poster","Title","Year"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAC1C,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAGF,YAAY,CAACG,IAAb,CAAkBC,MAAjC;;AAEA,QAAMC,WAAW,GAAGC,EAAE,IAAI;AACzBT,IAAAA,MAAM,CAACU,IAAP,CAAa,YAAb,EAA2B,IAAGD,EAAG,EAAjC;AACA,GAFD;;AAIA,MAAIJ,MAAJ,EAAY;AACX;AACAD,IAAAA,UAAU,GAAGC,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAI;AAChC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAE;AAAlB,SACC;AAAG,QAAA,OAAO,EAAE,MAAML,WAAW,CAACI,KAAK,CAACC,MAAP;AAA7B,SACC;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEF,KAAK,CAACG,KADR,QACiBH,KAAK,CAACI,IADvB,MAFD,CADD,CADD,CADD;AAYA,KAbY,CAAb;AAcA,GAhBD,MAgBO;AACN;AACAZ,IAAAA,UAAU,CAACM,IAAX,CAAgBP,YAAY,CAACG,IAA7B;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAeC,KAAK,IAAI;AACpC,aACC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC,SACC;AAAG,QAAA,OAAO,EAAE,MAAML,WAAW,CAACI,KAAK,CAACC,MAAP;AAA7B,SACC;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,GAAG,EAAC;AAApD,QADD,EAEC;AAAG,QAAA,SAAS,EAAC;AAAb,SACEF,KAAK,CAACG,KADR,QACiBH,KAAK,CAACI,IADvB,MAFD,CADD,CADD;AAUA,KAXY,CAAb;AAYA;;AACD,SACC,mBACC;AACC,IAAA,SAAS,EAAC,aADX,CAEC;;AAFD,yBADD,EAOEZ,UAPF,CADD;AAWA,CAnDD;;AAqDA,eAAeF,YAAf","sourcesContent":["import Router from 'next/router';\nimport Paper from '@material-ui/core/Paper';\n\nconst SearchResult = ({ searchresult }) => {\n\tlet moviesList = [];\n\tconst movies = searchresult.data.Search;\n\n\tconst handleClick = Id => {\n\t\tRouter.push(`/[movieId]`, `/${Id}`);\n\t};\n\n\tif (movies) {\n\t\t// User has not submitted the form, we are diplaying the array results\n\t\tmoviesList = movies.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t<Paper elevation={5}>\n\t\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Paper>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t} else {\n\t\t// User has submiited the form, we are displaying the best matched a single movie\n\t\tmoviesList.push(searchresult.data);\n\t\tmoviesList = moviesList.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div key={movie.imdbID} className='movie'>\n\t\t\t\t\t<a onClick={() => handleClick(movie.imdbID)}>\n\t\t\t\t\t\t<img src={movie.Poster} className='moviePoster' alt='Movie poster' />\n\t\t\t\t\t\t<p className='movieTitle'>\n\t\t\t\t\t\t\t{movie.Title} ({movie.Year})\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<p\n\t\t\t\tclassName='resultsText'\n\t\t\t\t// style={{ textAlign: 'center', textShadow: '4px 4px 9px black' }}\n\t\t\t>\n\t\t\t\tSearch Results...\n\t\t\t</p>\n\t\t\t{moviesList}\n\t\t</div>\n\t);\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}